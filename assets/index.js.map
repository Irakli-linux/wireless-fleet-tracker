{"version":3,"sources":["webpack:///index.js","webpack:///./js/app.js","webpack:///./js/dashboardView.js","webpack:///./js/vehicleListView.js","webpack:///./index.html","webpack:///external \"angular\"","webpack:///external {\"amd\":\"angular-route\"}","webpack:///./js/index.js","webpack:///./views/dashboard.html","webpack:///./views/vehicle.html","webpack:///./views/vehicle_list.html","webpack:///external \"Twilio.Sync\"","webpack:///./js/vehicleView.js"],"names":["webpackJsonp","126","module","exports","__webpack_require__","moment","callbacks","subscribeToVehicleData","id","syncClient","list","then","getItems","limit","page","console","info","items","length","vehicles","driving_data","map","item","data","value","index","onVehicleData","on","push","token","$","SyncClient","Client","auth","updateToken","cb","that","this","get","result","success","log","setTimeout","bind","ttl","error","fail","jqXHR","textStatus","refreshVehicleList","i","vehicle","unique_name","name","friendly_name","created_at","date_created","format","refresh","addVehicle","newVehicle","callback","vehicleAdded","key","sid","secret","deleteVehicle","vehicleId","generateKey","init","127","all_maps","infowindows_map","vehicleView","dashboardView","mapElementName","newMap","initMapElement","infowindows","addDataToMap","onVehicleStats","stats","vehicleElemementName","updateStats","128","vehicleListView","click","hide","fadeIn","val","onVehicleAddingFailed","err","text","JSON","stringify","onVehicleAdded","130","p","131","angular","132","undefined","133","initVehicleStats","n_data_map","total_speed_map","total_driver_scores_map","updateVehicleStats","n_data","total_speed","total_driver_scores","miles","toFixed","avg_speed","driver_score","fuel","brake","runtime","speed","avgT","latestStats","currentView","$currentViewScope","App","window","app","$apply","controller","$scope","$timeout","forEach","$routeParams","copy","generateVehicleKey","config","$routeProvider","when","templateUrl","otherwise","redirectTo","162","path","run","c","put","163","164","169","Twilio","Sync","6","google","maps","Map","document","getElementById","zoom","latLon","lat","lng","lon","marker","Marker","position","title","String","content_string","infowindow","InfoWindow","content","panTo","getPosition","event","addListener","e","current_infowindow","close","getTitle","open","runtime_string","hours","Math","floor","minutes"],"mappings":"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","file":"index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 126:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\nvar moment = __webpack_require__(0);\n\nmodule.exports = function(callbacks) {\n  var $ = __webpack_require__(1);\n  var SyncClient = __webpack_require__(169).Client;\n  var syncClient;\n  var token;\n  var auth = \"username=trump&pincode=928462\";\n\n  var vehicles = {};\n\n  function subscribeToVehicleData(id) {\n    syncClient.list(\"vehicle-\" + id + \"-data\").then(function (list) {\n      list.getItems({ limit: 100 }).then(function (page) {\n        console.info(\"items arrived\", id, page.items.length);\n        vehicles[id].driving_data = page.items.map(function (item) {\n          item.data.value.id = item.index;\n          callbacks.onVehicleData(vehicles[id], item.data.value);\n          return item.data.value;\n        });\n      });\n      list.on(\"itemAdded\", function (item) {\n        console.info(\"itemAdded\", id, item);\n        item.data.value.id = item.index;\n        vehicles[id].driving_data.push(item.data.value);\n        callbacks.onVehicleData(vehicles[id], item.data.value);\n      });\n    });\n  };\n\n\treturn {\n    vehicles: vehicles,\n\n    updateToken: function (cb) {\n      var that = this;\n      return $.get(\"/authenticate?\" + auth, function (result) {\n        if (result.success) {\n          console.log(\"token updated:\", result);\n          token = result.token;\n          if (cb) cb(token);\n          syncClient.updateToken(token);\n          setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n        } else {\n          console.error(\"failed to authenticate the user: \", result.error);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send authentication request:\", textStatus, error);\n        setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n      });\n    },\n\n    refreshVehicleList: function () {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=list\", function (result) {\n        if (result.success) {\n          for (var i in result.vehicles) {\n            var vehicle = result.vehicles[i];\n            var id = vehicle.unique_name;\n            vehicles[id] = {\n              info: {\n                id: id,\n                name: vehicle.friendly_name,\n                created_at: moment(vehicle.date_created).format(MOMENT_FORMAT)\n              },\n              driving_data: []\n            };\n            subscribeToVehicleData(id);\n          }\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to list vehicles:\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send list vehicles request:\", textStatus, error);\n      });\n    },\n\n    addVehicle: function (newVehicle, callback) {\n      $.get(\"/fleetmanager?\" + auth + \"&op=add&vehicle_id=\"+(newVehicle.id||\"\")+\"&vehicle_name=\"+(newVehicle.name||\"\"), function (result) {\n        if (result.success) {\n          var vehicleAdded = {\n            info: {\n              created_at: moment(result.vehicle.date_created).format(MOMENT_FORMAT),\n              id: result.vehicle.unique_name,\n              name: result.vehicle.friendly_name,\n              key: result.key.sid,\n              secret: result.key.secret\n            },\n            driving_data: []\n          };\n          vehicles[result.vehicle.unique_name] = vehicleAdded;          \n          subscribeToVehicleData(result.vehicle.unique_name);\n          callback(null, vehicleAdded);\n        } else {\n          callback(result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send add vehicle request:\", textStatus, error);\n      });\n    },\n\n    deleteVehicle: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=delete&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          delete vehicles[vehicleId];\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to delete vehicle\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send delete vehicle request:\", textStatus, error);\n      });\n    },\n\n    generateKey: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=genkey&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          vehicles[vehicleId].info.key = result.key.sid;\n          vehicles[vehicleId].info.secret = result.key.secret;\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to generate key\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send generate key request:\", textStatus, error);\n      });\n    },\n\n    init: function () {\n      var that = this;\n      this.updateToken(function (token) {\n        syncClient = new SyncClient(token);\n        that.refreshVehicleList();\n      });\n    }\n\t};\n};\n\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(162);\n\nvar vehicleView = __webpack_require__(6);\n\nvar all_maps;\nvar infowindows_map;\n\nvar dashboardView = {\n  init: function () {\n    all_maps = {};\n    infowindows_map = {};\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (!infowindows_map[vehicle.info.id]) {\n      var mapElementName = 'map-'+vehicle.info.id;\n      var newMap = vehicleView.initMapElement(mapElementName);\n      all_maps[vehicle.info.id] = newMap;  \n      infowindows_map[vehicle.info.id] = {};\n    }\n    var map = all_maps[vehicle.info.id];\n    var infowindows = infowindows_map[vehicle.info.id];\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    if (!stats) return;\n\n    var vehicleElemementName = 'vehicle'+vehicle.info.id;\n\n    vehicleView.updateStats(vehicleElemementName, stats);\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(164);\n\nvar $ = __webpack_require__(1);\n\nvar vehicleListView = {\n  init: function () {\n    $('.add-vehicle-show').click(function() {\n      $(this).hide();\n      $('.add-vehicle').fadeIn(333);\n      $('#id').val('');\n      $('#name').val('');\n      $('#sim_sid').val('');\n    });\n    $('.add-vehicle-cancel').click(function() {\n      $('.add-vehicle').hide();\n      $('.add-vehicle-show').fadeIn(333);\n    });\n  },\n\n  onVehicleAddingFailed: function (err) {\n    $('#add-vehicle-failed').text(JSON.stringify(err));\n  },\n\n  onVehicleAdded: function () {\n    $('.add-vehicle').hide();\n    $('.add-vehicle-show').fadeIn(333);\n  }\n}\n\nmodule.exports = vehicleListView;\n\n\n/***/ }),\n\n/***/ 130:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ 132:\n/***/ (function(module, exports) {\n\nmodule.exports = undefined;\n\n/***/ }),\n\n/***/ 133:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(131);\n__webpack_require__(132);\n\n// style sheets\n__webpack_require__(3);\n__webpack_require__(4);\n\n// index.html\n__webpack_require__(130);\n\nvar dashboardView = __webpack_require__(127);\nvar vehicleView = __webpack_require__(6);\nvar vehicleListView = __webpack_require__(128);\nvar currentView;\nvar $currentViewScope;\n\nvar n_data_map = {};\nvar total_speed_map = {};\nvar total_driver_scores_map = {};\nvar current_infowindow = null;\nvar latestStats = null;\n\nfunction initVehicleStats(vehicle) {\n  if (!(vehicle.info.id in n_data_map)) {\n    n_data_map[vehicle.info.id] = 0;\n    total_speed_map[vehicle.info.id] = 0;\n    total_driver_scores_map[vehicle.info.id] = 0;\n  }\n}\n\nfunction updateVehicleStats(vehicle, data) {\n  initVehicleStats(vehicle);\n\n  var n_data = ++n_data_map[vehicle.info.id];\n  var total_speed = total_speed_map[vehicle.info.id];\n  var total_driver_scores = total_driver_scores_map[vehicle.info.id];\n\n  var stats = {\n    miles : (data.miles).toFixed(0),\n    avg_speed : (total_speed/n_data).toFixed(0),\n    driver_score : (total_driver_scores/n_data).toFixed(0),\n    fuel : (data.fuel).toFixed(0),\n    brake : (data.brake).toFixed(0),\n    runtime : data.runtime\n  };\n\n  total_speed_map[vehicle.info.id] =  total_speed_map[vehicle.info.id] + data.speed;\n  total_driver_scores_map[vehicle.info.id] = total_driver_scores_map[vehicle.info.id] + data.avgT;\n\n  latestStats = stats;\n}\n\nvar App = __webpack_require__(126);\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  },\n\n  onVehicleData: function (vehicle, data) {\n    updateVehicleStats(vehicle, data);\n    if (currentView.onVehicleData) currentView.onVehicleData(vehicle, data);\n    if (currentView.onVehicleStats) currentView.onVehicleStats(vehicle, latestStats);\n  },\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    currentView = dashboardView;\n    dashboardView.init();\n    // use timeout service to wait until view is loaded\n    $timeout(function () {\n      for (var id in $scope.vehicles) {\n        var vehicle = $scope.vehicles[id];\n        vehicle.driving_data.forEach(function (data) {\n          dashboardView.onVehicleData(vehicle, data);\n        });\n        dashboardView.onVehicleStats(vehicle, latestStats);\n      }\n    }, 0);\n  }])\n  .controller('VehicleViewCtrl', ['$routeParams', '$scope', '$timeout', function ($routeParams, $scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.id = $routeParams.id;\n    var vehicle = app.vehicles[$routeParams.id];\n    currentView = vehicleView;\n    vehicleView.init();\n    if (vehicle) {\n      $timeout(function () {\n        vehicle.driving_data.forEach(function (data) {\n          vehicleView.onVehicleData(vehicle.info.id, data);\n        });\n        vehicleView.onVehicleStats(vehicle, latestStats);\n      }, 0);\n    }\n  }])\n  .controller('VehicleListViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.newVehicle = {};\n    $scope.addVehicle = function () {\n      var err = app.addVehicle(angular.copy($scope.newVehicle), function (err, vehicleAdded) {\n        if (err) {\n          vehicleListView.onVehicleAddingFailed(err);\n        } else {\n          $scope.vehicleAdded = vehicleAdded;\n          vehicleListView.onVehicleAdded();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteVehicle = function (vehicleId) {\n      app.deleteVehicle(vehicleId);\n    };\n    $scope.generateVehicleKey = function (vehicleId) {\n      app.generateKey(vehicleId);\n    };\n    currentView = vehicleListView;\n    vehicleListView.init();\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: \"views/dashboard.html\" } )\n      .when('/vehicles/:id', { controller: 'VehicleViewCtrl', templateUrl: \"views/vehicle.html\" } )\n      .when('/vehicles', { controller: 'VehicleListViewCtrl', templateUrl: \"views/vehicle_list.html\" } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }]);\n\n\n/***/ }),\n\n/***/ 162:\n/***/ (function(module, exports) {\n\nvar path = 'views/dashboard.html';\nvar html = \"<h1>Active Vehicles</h1>\\n\\n<h3 ng-hide=\\\"vehicles.length\\\" class=\\\"ng-hide\\\">There are currently no vehicles on the road.</h3>\\n\\n<div ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\">\\n  <h3>{{ vehicle.info.id }} | {{vehicle.info.name}} <a href=\\\"#!/vehicles/{{vehicle.info.id}}\\\">(view past drives)</a></h3>\\n  <h4>Current trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map-{{vehicle.info.id}}\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-warning\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Driver Score</h3>\\n        </div>\\n        <div class=\\\"panel-body driver_score\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, exports) {\n\nvar path = 'views/vehicle.html';\nvar html = \"<div class=\\\"jumbotron vehicle \\\">\\n  <h3>{{vehicles[id].info.name}}</h3>\\n  <h4>Total trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-warning\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Driver Score</h3>\\n        </div>\\n        <div class=\\\"panel-body driver_score\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, exports) {\n\nvar path = 'views/vehicle_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Vehicles</h1>\\n    </div>\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n<!--\\n            <th>Twilio SIM SID</th>\\n-->\\n            <th>Key</th>\\n            <th>Created</th>\\n            <th>Operations</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\" ng-class=\\\"{'text-success': vehicleAdded.info.id === vehicle.info.id}\\\">\\n            <td>{{ vehicle.info.id }}</td>\\n            <td>{{ vehicle.info.name }}</td>\\n<!--\\n            <td>{{ vehicle.info.sim_sid }}</td>\\n            <td>{{ vehicle.info.key }} <small ng-if=\\\"vehicle.info.secret\\\" class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></td>\\n-->\\n            <td>\\n              <div ng-if=\\\"vehicle.info.key\\\">{{ vehicle.info.key }} <small class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></div>\\n              <div ng-if=\\\"!vehicle.info.key\\\" class=\\\"text-danger\\\">Hidden</div>\\n            </td>\\n            <td>{{ vehicle.info.created_at }}</td>\\n<!--\\n            <td><a href=\\\"#!/vehicles/{{ vehicle.info.id }}/edit\\\" class=\\\"btn btn-xs btn-success\\\">Edit</a></td>\\n-->\\n            <td>\\n              <button ng-click=\\\"generateVehicleKey(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Generate New Key</button>\\n              <button ng-click=\\\"deleteVehicle(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-vehicle-show\\\">Add New Vehicle</a>\\n\\n<div class=\\\"row add-vehicle\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addVehicle()\\\">\\n      <fieldset>\\n        <legend>New Vehicle</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.id\\\" id=\\\"id\\\" placeholder=\\\"Id\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n\\n<!--\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.sim_sid\\\" id=\\\"sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n-->\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-vehicle-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-vehicle-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 169:\n/***/ (function(module, exports) {\n\nmodule.exports = Twilio.Sync;\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(163);\n\nvar $ = __webpack_require__(1);\n\nvar map;\nvar infowindows = {};\n\nvar vehicleView = {\n  initMapElement: function (mapElementName) {\n    var map = new google.maps.Map(document.getElementById(mapElementName), {\n      zoom: 14\n    });\n    return map;\n  },\n\n  addDataToMap: function (map, infowindows, data) {\n    var latLon = { lat: data.lat, lng: data.lon || 0}\n    var marker = new google.maps.Marker({\n      position: latLon,\n      map: map,\n      title: String(data.id)\n    });\n\n    var content_string = '<div class=\"infowindow-label\"> \\\n                            <h1>Point data</h1> \\\n                            <p><span class=\"label label-default\">Distance:</span> <span class=\"value\">'+(data.miles).toFixed(0)+' Miles</span></p> \\\n                            <p><span class=\"label label-default\">Speed:</span> <span class=\"value\">'+(data.speed).toFixed(0)+' mph</span></p> \\\n                            <p><span class=\"label label-default\">Fuel:</span> <span class=\"value\">'+(data.fuel).toFixed(0)+'%</span></p> \\\n                          </div>';\n\n    var infowindow = new google.maps.InfoWindow({\n      content: content_string,\n    });\n    infowindows[data.id] = infowindow;\n    map.panTo(marker.getPosition());\n\n    google.maps.event.addListener(marker, 'click', function(e) {\n      if(current_infowindow) {\n        current_infowindow.close();\n      }\n      infowindows[this.getTitle()].open(map, this);\n      current_infowindow = infowindows[this.getTitle()];\n    });\n  },\n\n  updateStats: function (vehicleElemementName, stats) {\n    if (!stats) return;\n\n    $('.' + vehicleElemementName + ' .miles span').text(stats.miles);\n    $('.' + vehicleElemementName + ' .speed span').text(stats.avg_speed);\n    $('.' + vehicleElemementName + ' .driver_score span').text(100 - stats.driver_score);\n    $('.' + vehicleElemementName + ' .fuel span').text(stats.fuel);\n    $('.' + vehicleElemementName + ' .brake span').text(stats.brake);\n\n    var runtime_string;\n    if(stats.runtime < 60) {\n      runtime_string = stats.runtime+' seconds';\n    } else if(stats.runtime < 3600) {\n      runtime_string = (stats.runtime/60).toFixed(0)+\" minutes\";\n    } else {\n      var hours = Math.floor(runtime/3600);\n      var minutes = ((runtime - (hours*3600))/60).toFixed(0);\n      runtime_string = hours+\" hours and \"+minutes+\" minutes\";\n    }\n\n    $('.' + vehicleElemementName + ' .runtime').text(runtime_string);    \n  },\n\n  init: function () {\n    map = vehicleView.initMapElement('map');\n  },\n\n  onVehicleData: function (vehicle, data) {\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    vehicleView.updateStats('vehicle', stats);\n  }  \n};\n\nmodule.exports = vehicleView;\n\n\n/***/ })\n\n},[133]);\n\n\n// WEBPACK FOOTER //\n// index.js","'use strict';\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\nvar moment = require(\"moment\");\n\nmodule.exports = function(callbacks) {\n  var $ = require(\"jquery\");\n  var SyncClient = require(\"twilio-sync\").Client;\n  var syncClient;\n  var token;\n  var auth = \"username=trump&pincode=928462\";\n\n  var vehicles = {};\n\n  function subscribeToVehicleData(id) {\n    syncClient.list(\"vehicle-\" + id + \"-data\").then(function (list) {\n      list.getItems({ limit: 100 }).then(function (page) {\n        console.info(\"items arrived\", id, page.items.length);\n        vehicles[id].driving_data = page.items.map(function (item) {\n          item.data.value.id = item.index;\n          callbacks.onVehicleData(vehicles[id], item.data.value);\n          return item.data.value;\n        });\n      });\n      list.on(\"itemAdded\", function (item) {\n        console.info(\"itemAdded\", id, item);\n        item.data.value.id = item.index;\n        vehicles[id].driving_data.push(item.data.value);\n        callbacks.onVehicleData(vehicles[id], item.data.value);\n      });\n    });\n  };\n\n\treturn {\n    vehicles: vehicles,\n\n    updateToken: function (cb) {\n      var that = this;\n      return $.get(\"/authenticate?\" + auth, function (result) {\n        if (result.success) {\n          console.log(\"token updated:\", result);\n          token = result.token;\n          if (cb) cb(token);\n          syncClient.updateToken(token);\n          setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n        } else {\n          console.error(\"failed to authenticate the user: \", result.error);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send authentication request:\", textStatus, error);\n        setTimeout(that.updateToken.bind(that), 10000); // retry in 10 seconds\n      });\n    },\n\n    refreshVehicleList: function () {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=list\", function (result) {\n        if (result.success) {\n          for (var i in result.vehicles) {\n            var vehicle = result.vehicles[i];\n            var id = vehicle.unique_name;\n            vehicles[id] = {\n              info: {\n                id: id,\n                name: vehicle.friendly_name,\n                created_at: moment(vehicle.date_created).format(MOMENT_FORMAT)\n              },\n              driving_data: []\n            };\n            subscribeToVehicleData(id);\n          }\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to list vehicles:\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send list vehicles request:\", textStatus, error);\n      });\n    },\n\n    addVehicle: function (newVehicle, callback) {\n      $.get(\"/fleetmanager?\" + auth + \"&op=add&vehicle_id=\"+(newVehicle.id||\"\")+\"&vehicle_name=\"+(newVehicle.name||\"\"), function (result) {\n        if (result.success) {\n          var vehicleAdded = {\n            info: {\n              created_at: moment(result.vehicle.date_created).format(MOMENT_FORMAT),\n              id: result.vehicle.unique_name,\n              name: result.vehicle.friendly_name,\n              key: result.key.sid,\n              secret: result.key.secret\n            },\n            driving_data: []\n          };\n          vehicles[result.vehicle.unique_name] = vehicleAdded;          \n          subscribeToVehicleData(result.vehicle.unique_name);\n          callback(null, vehicleAdded);\n        } else {\n          callback(result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send add vehicle request:\", textStatus, error);\n      });\n    },\n\n    deleteVehicle: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=delete&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          delete vehicles[vehicleId];\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to delete vehicle\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send delete vehicle request:\", textStatus, error);\n      });\n    },\n\n    generateKey: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=genkey&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          vehicles[vehicleId].info.key = result.key.sid;\n          vehicles[vehicleId].info.secret = result.key.secret;\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to generate key\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send generate key request:\", textStatus, error);\n      });\n    },\n\n    init: function () {\n      var that = this;\n      this.updateToken(function (token) {\n        syncClient = new SyncClient(token);\n        that.refreshVehicleList();\n      });\n    }\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 126\n// module chunks = 0","require(\"../views/dashboard.html\");\n\nvar vehicleView = require(\"./vehicleView\");\n\nvar all_maps;\nvar infowindows_map;\n\nvar dashboardView = {\n  init: function () {\n    all_maps = {};\n    infowindows_map = {};\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (!infowindows_map[vehicle.info.id]) {\n      var mapElementName = 'map-'+vehicle.info.id;\n      var newMap = vehicleView.initMapElement(mapElementName);\n      all_maps[vehicle.info.id] = newMap;  \n      infowindows_map[vehicle.info.id] = {};\n    }\n    var map = all_maps[vehicle.info.id];\n    var infowindows = infowindows_map[vehicle.info.id];\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    if (!stats) return;\n\n    var vehicleElemementName = 'vehicle'+vehicle.info.id;\n\n    vehicleView.updateStats(vehicleElemementName, stats);\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/dashboardView.js\n// module id = 127\n// module chunks = 0","require(\"../views/vehicle_list.html\");\n\nvar $ = require(\"jquery\");\n\nvar vehicleListView = {\n  init: function () {\n    $('.add-vehicle-show').click(function() {\n      $(this).hide();\n      $('.add-vehicle').fadeIn(333);\n      $('#id').val('');\n      $('#name').val('');\n      $('#sim_sid').val('');\n    });\n    $('.add-vehicle-cancel').click(function() {\n      $('.add-vehicle').hide();\n      $('.add-vehicle-show').fadeIn(333);\n    });\n  },\n\n  onVehicleAddingFailed: function (err) {\n    $('#add-vehicle-failed').text(JSON.stringify(err));\n  },\n\n  onVehicleAdded: function () {\n    $('.add-vehicle').hide();\n    $('.add-vehicle-show').fadeIn(333);\n  }\n}\n\nmodule.exports = vehicleListView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/vehicleListView.js\n// module id = 128\n// module chunks = 0","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 130\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 131\n// module chunks = 0","module.exports = undefined;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"angular-route\"}\n// module id = 132\n// module chunks = 0","'use strict';\n\nvar angular = require(\"angular\");\nrequire(\"angular-route\");\n\n// style sheets\nrequire(\"bootstrap-webpack\");\nrequire(\"../scss/main.scss\");\n\n// index.html\nrequire(\"../index.html\");\n\nvar dashboardView = require(\"./dashboardView\");\nvar vehicleView = require(\"./vehicleView\");\nvar vehicleListView = require(\"./vehicleListView\");\nvar currentView;\nvar $currentViewScope;\n\nvar n_data_map = {};\nvar total_speed_map = {};\nvar total_driver_scores_map = {};\nvar current_infowindow = null;\nvar latestStats = null;\n\nfunction initVehicleStats(vehicle) {\n  if (!(vehicle.info.id in n_data_map)) {\n    n_data_map[vehicle.info.id] = 0;\n    total_speed_map[vehicle.info.id] = 0;\n    total_driver_scores_map[vehicle.info.id] = 0;\n  }\n}\n\nfunction updateVehicleStats(vehicle, data) {\n  initVehicleStats(vehicle);\n\n  var n_data = ++n_data_map[vehicle.info.id];\n  var total_speed = total_speed_map[vehicle.info.id];\n  var total_driver_scores = total_driver_scores_map[vehicle.info.id];\n\n  var stats = {\n    miles : (data.miles).toFixed(0),\n    avg_speed : (total_speed/n_data).toFixed(0),\n    driver_score : (total_driver_scores/n_data).toFixed(0),\n    fuel : (data.fuel).toFixed(0),\n    brake : (data.brake).toFixed(0),\n    runtime : data.runtime\n  };\n\n  total_speed_map[vehicle.info.id] =  total_speed_map[vehicle.info.id] + data.speed;\n  total_driver_scores_map[vehicle.info.id] = total_driver_scores_map[vehicle.info.id] + data.avgT;\n\n  latestStats = stats;\n}\n\nvar App = require(\"./app\");\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  },\n\n  onVehicleData: function (vehicle, data) {\n    updateVehicleStats(vehicle, data);\n    if (currentView.onVehicleData) currentView.onVehicleData(vehicle, data);\n    if (currentView.onVehicleStats) currentView.onVehicleStats(vehicle, latestStats);\n  },\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('DashboardViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    currentView = dashboardView;\n    dashboardView.init();\n    // use timeout service to wait until view is loaded\n    $timeout(function () {\n      for (var id in $scope.vehicles) {\n        var vehicle = $scope.vehicles[id];\n        vehicle.driving_data.forEach(function (data) {\n          dashboardView.onVehicleData(vehicle, data);\n        });\n        dashboardView.onVehicleStats(vehicle, latestStats);\n      }\n    }, 0);\n  }])\n  .controller('VehicleViewCtrl', ['$routeParams', '$scope', '$timeout', function ($routeParams, $scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.id = $routeParams.id;\n    var vehicle = app.vehicles[$routeParams.id];\n    currentView = vehicleView;\n    vehicleView.init();\n    if (vehicle) {\n      $timeout(function () {\n        vehicle.driving_data.forEach(function (data) {\n          vehicleView.onVehicleData(vehicle.info.id, data);\n        });\n        vehicleView.onVehicleStats(vehicle, latestStats);\n      }, 0);\n    }\n  }])\n  .controller('VehicleListViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.newVehicle = {};\n    $scope.addVehicle = function () {\n      var err = app.addVehicle(angular.copy($scope.newVehicle), function (err, vehicleAdded) {\n        if (err) {\n          vehicleListView.onVehicleAddingFailed(err);\n        } else {\n          $scope.vehicleAdded = vehicleAdded;\n          vehicleListView.onVehicleAdded();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteVehicle = function (vehicleId) {\n      app.deleteVehicle(vehicleId);\n    };\n    $scope.generateVehicleKey = function (vehicleId) {\n      app.generateKey(vehicleId);\n    };\n    currentView = vehicleListView;\n    vehicleListView.init();\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: \"views/dashboard.html\" } )\n      .when('/vehicles/:id', { controller: 'VehicleViewCtrl', templateUrl: \"views/vehicle.html\" } )\n      .when('/vehicles', { controller: 'VehicleListViewCtrl', templateUrl: \"views/vehicle_list.html\" } )\n      .otherwise({ redirectTo: '/dashboard' }); \n  }]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 133\n// module chunks = 0","var path = 'views/dashboard.html';\nvar html = \"<h1>Active Vehicles</h1>\\n\\n<h3 ng-hide=\\\"vehicles.length\\\" class=\\\"ng-hide\\\">There are currently no vehicles on the road.</h3>\\n\\n<div ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\">\\n  <h3>{{ vehicle.info.id }} | {{vehicle.info.name}} <a href=\\\"#!/vehicles/{{vehicle.info.id}}\\\">(view past drives)</a></h3>\\n  <h4>Current trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map-{{vehicle.info.id}}\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-warning\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Driver Score</h3>\\n        </div>\\n        <div class=\\\"panel-body driver_score\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/dashboard.html\n// module id = 162\n// module chunks = 0","var path = 'views/vehicle.html';\nvar html = \"<div class=\\\"jumbotron vehicle \\\">\\n  <h3>{{vehicles[id].info.name}}</h3>\\n  <h4>Total trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-warning\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Driver Score</h3>\\n        </div>\\n        <div class=\\\"panel-body driver_score\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/vehicle.html\n// module id = 163\n// module chunks = 0","var path = 'views/vehicle_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Vehicles</h1>\\n    </div>\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n<!--\\n            <th>Twilio SIM SID</th>\\n-->\\n            <th>Key</th>\\n            <th>Created</th>\\n            <th>Operations</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\" ng-class=\\\"{'text-success': vehicleAdded.info.id === vehicle.info.id}\\\">\\n            <td>{{ vehicle.info.id }}</td>\\n            <td>{{ vehicle.info.name }}</td>\\n<!--\\n            <td>{{ vehicle.info.sim_sid }}</td>\\n            <td>{{ vehicle.info.key }} <small ng-if=\\\"vehicle.info.secret\\\" class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></td>\\n-->\\n            <td>\\n              <div ng-if=\\\"vehicle.info.key\\\">{{ vehicle.info.key }} <small class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></div>\\n              <div ng-if=\\\"!vehicle.info.key\\\" class=\\\"text-danger\\\">Hidden</div>\\n            </td>\\n            <td>{{ vehicle.info.created_at }}</td>\\n<!--\\n            <td><a href=\\\"#!/vehicles/{{ vehicle.info.id }}/edit\\\" class=\\\"btn btn-xs btn-success\\\">Edit</a></td>\\n-->\\n            <td>\\n              <button ng-click=\\\"generateVehicleKey(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Generate New Key</button>\\n              <button ng-click=\\\"deleteVehicle(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-vehicle-show\\\">Add New Vehicle</a>\\n\\n<div class=\\\"row add-vehicle\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addVehicle()\\\">\\n      <fieldset>\\n        <legend>New Vehicle</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.id\\\" id=\\\"id\\\" placeholder=\\\"Id\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n\\n<!--\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.sim_sid\\\" id=\\\"sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n-->\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-vehicle-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-vehicle-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/vehicle_list.html\n// module id = 164\n// module chunks = 0","module.exports = Twilio.Sync;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Twilio.Sync\"\n// module id = 169\n// module chunks = 0","require(\"../views/vehicle.html\");\n\nvar $ = require(\"jquery\");\n\nvar map;\nvar infowindows = {};\n\nvar vehicleView = {\n  initMapElement: function (mapElementName) {\n    var map = new google.maps.Map(document.getElementById(mapElementName), {\n      zoom: 14\n    });\n    return map;\n  },\n\n  addDataToMap: function (map, infowindows, data) {\n    var latLon = { lat: data.lat, lng: data.lon || 0}\n    var marker = new google.maps.Marker({\n      position: latLon,\n      map: map,\n      title: String(data.id)\n    });\n\n    var content_string = '<div class=\"infowindow-label\"> \\\n                            <h1>Point data</h1> \\\n                            <p><span class=\"label label-default\">Distance:</span> <span class=\"value\">'+(data.miles).toFixed(0)+' Miles</span></p> \\\n                            <p><span class=\"label label-default\">Speed:</span> <span class=\"value\">'+(data.speed).toFixed(0)+' mph</span></p> \\\n                            <p><span class=\"label label-default\">Fuel:</span> <span class=\"value\">'+(data.fuel).toFixed(0)+'%</span></p> \\\n                          </div>';\n\n    var infowindow = new google.maps.InfoWindow({\n      content: content_string,\n    });\n    infowindows[data.id] = infowindow;\n    map.panTo(marker.getPosition());\n\n    google.maps.event.addListener(marker, 'click', function(e) {\n      if(current_infowindow) {\n        current_infowindow.close();\n      }\n      infowindows[this.getTitle()].open(map, this);\n      current_infowindow = infowindows[this.getTitle()];\n    });\n  },\n\n  updateStats: function (vehicleElemementName, stats) {\n    if (!stats) return;\n\n    $('.' + vehicleElemementName + ' .miles span').text(stats.miles);\n    $('.' + vehicleElemementName + ' .speed span').text(stats.avg_speed);\n    $('.' + vehicleElemementName + ' .driver_score span').text(100 - stats.driver_score);\n    $('.' + vehicleElemementName + ' .fuel span').text(stats.fuel);\n    $('.' + vehicleElemementName + ' .brake span').text(stats.brake);\n\n    var runtime_string;\n    if(stats.runtime < 60) {\n      runtime_string = stats.runtime+' seconds';\n    } else if(stats.runtime < 3600) {\n      runtime_string = (stats.runtime/60).toFixed(0)+\" minutes\";\n    } else {\n      var hours = Math.floor(runtime/3600);\n      var minutes = ((runtime - (hours*3600))/60).toFixed(0);\n      runtime_string = hours+\" hours and \"+minutes+\" minutes\";\n    }\n\n    $('.' + vehicleElemementName + ' .runtime').text(runtime_string);    \n  },\n\n  init: function () {\n    map = vehicleView.initMapElement('map');\n  },\n\n  onVehicleData: function (vehicle, data) {\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    vehicleView.updateStats('vehicle', stats);\n  }  \n};\n\nmodule.exports = vehicleView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/vehicleView.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}