{"version":3,"sources":["webpack:///index.js","webpack:///./js/app.js","webpack:///./js/dashboardView.js","webpack:///./js/loginView.js","webpack:///./js/vehicleListView.js","webpack:///./index.html","webpack:///external \"angular\"","webpack:///external {\"amd\":\"angular-route\"}","webpack:///./js/index.js","webpack:///./views/dashboard.html","webpack:///./views/login.html","webpack:///./views/vehicle.html","webpack:///./views/vehicle_list.html","webpack:///external \"Twilio.Sync\"","webpack:///./js/vehicleView.js"],"names":["webpackJsonp","126","module","exports","__webpack_require__","moment","callbacks","initVehicleExtraInfo","id","extraInfo","syncClient","document","then","console","log","set","fetchVehicleExtraInfo","value","subscribeToVehicleData","list","getItems","limit","order","page","info","items","length","vehicles","driving_data","map","item","data","index","onVehicleData","on","push","auth","$","SyncClient","Client","updateToken","cb","that","this","get","result","success","sync_token","twiml_app_token","Twilio","Device","setup","setTimeout","bind","ttl","error","authFailed","fail","jqXHR","textStatus","refreshVehicleList","when","apply","vehicle","uniqueName","name","friendlyName","created_at","date_created","format","extend","done","refresh","toString","addVehicle","newVehicle","callback","toUpperCase","type","mobile","vehicleAdded","key","sid","secret","deleteVehicle","vehicleId","generateKey","call","currentTarget","activeConnection","voiceConnection","disconnect","prop","addClass","html","removeClass","connect","number","checkLoggedIn","authRequired","login","username","password","syncToken","twimlAppToken","onAuthenticated","init","127","all_maps","infowindows_map","vehicleView","dashboardView","$scope","latestStats","forEach","onVehicleStats","mapElementName","newMap","initMapElement","infowindows","addDataToMap","stats","vehicleElemementName","updateStats","128","loginView","app","click","129","vehicleListView","hide","fadeIn","val","onVehicleAddingFailed","err","text","JSON","stringify","onVehicleAdded","131","p","132","angular","133","undefined","134","initVehicleStats","n_data_map","total_speed_map","total_driver_scores_map","updateVehicleStats","n_data","total_speed","total_driver_scores","miles","toFixed","avg_speed","driver_score","fuel","brake","runtime","speed","avgT","currentView","$currentViewScope","App","window","$apply","location","href","reason","controller","$timeout","$routeParams","copy","generateVehicleKey","config","$routeProvider","templateUrl","otherwise","redirectTo","163","path","run","c","put","164","165","166","171","Sync","6","current_infowindow","google","maps","Map","getElementById","zoom","latLon","lat","lng","lon","marker","Marker","position","title","String","content_string","infowindow","InfoWindow","content","panTo","getPosition","event","addListener","e","close","getTitle","open","runtime_string","hours","Math","floor","minutes"],"mappings":"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","file":"index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 126:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\nvar moment = __webpack_require__(0);\n\nmodule.exports = function(callbacks) {\n  var $ = __webpack_require__(1);\n  var SyncClient = __webpack_require__(171).Client;\n  var syncClient;\n  var token;\n  var auth;\n\n  var vehicles = {};\n\n\n  function initVehicleExtraInfo(id, extraInfo) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"initVehicleExtraInfo\", id, extraInfo);\n      return document.set(extraInfo);\n    });\n  }\n\n  function fetchVehicleExtraInfo(id) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"fetchVehicleExtraInfo\", id, document.value);\n      return document.value;\n    });\n  };\n\n  function subscribeToVehicleData(id) {\n    syncClient.list(\"vehicle-\" + id + \"-data\").then(function (list) {\n      list.getItems({ limit: 100, order: \"desc\" }).then(function (page) {\n        console.info(\"items arrived\", id, page.items.length);\n        vehicles[id].driving_data = page.items.map(function (item) {\n          item.data.value.id = item.index;\n          callbacks.onVehicleData(vehicles[id], item.data.value);\n          return item.data.value;\n        });\n      });\n      list.on(\"itemAdded\", function (item) {\n        console.info(\"itemAdded\", id, item);\n        item.data.value.id = item.index;\n        vehicles[id].driving_data.push(item.data.value);\n        callbacks.onVehicleData(vehicles[id], item.data.value);\n      });\n    });\n  };\n\n\treturn {\n    vehicles: vehicles,\n\n    updateToken: function (cb) {\n      var that = this;\n      return $.get(\"/authenticate?\" + auth, function (result) {\n        if (result.success) {\n          console.log(\"token updated:\", result);\n          if (cb) {\n            cb(result.sync_token, result.twiml_app_token);\n          } else {\n            syncClient.updateToken(result.sync_token);\n            Twilio.Device.setup(result.twiml_app_token);\n          }\n          setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n        } else {\n          console.error(\"failed to authenticate the user: \", result.error);\n          auth=\"\";\n          callbacks.authFailed(result.error);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send authentication request:\", textStatus, error);\n        auth=\"\";\n        callbacks.authFailed(error);\n      });\n    },\n\n    refreshVehicleList: function () {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=list\", function (result) {\n        if (result.success) {\n          $.when.apply($, $.map(result.vehicles, function (vehicle) {\n            var id = vehicle.uniqueName;\n            vehicles[id] = {\n              info: {\n                id: id,\n                name: vehicle.friendlyName,\n                created_at: moment(vehicle.date_created).format(MOMENT_FORMAT)\n              },\n              driving_data: []\n            };\n            return fetchVehicleExtraInfo(id).then(function (extraInfo) {\n              vehicles[id].info = $.extend(vehicles[id].info, extraInfo);\n              subscribeToVehicleData(vehicle.uniqueName);\n            });\n          })).done(function () {\n            callbacks.refresh();\n          });\n        } else {\n          console.error(\"failed to list vehicles:\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send list vehicles request:\", textStatus, error.toString());\n      });\n    },\n\n    addVehicle: function (newVehicle, callback) {\n      if (!newVehicle.id) {\n        return callback({success: false, error: \"Vehicle id should not be empty\"});\n      }\n      $.get(\"/fleetmanager?\" + auth + \"&op=add&vehicle_id=\"+newVehicle.id.toUpperCase()+\"&vehicle_name=\"+(newVehicle.name||\"\"), function (result) {\n        if (result.success) {\n          var extraInfo = {\n            type: newVehicle.type,\n            mobile: newVehicle.mobile,\n          };\n          var vehicleAdded = {\n            info: $.extend({\n              id: result.vehicle.uniqueName,\n              name: result.vehicle.friendlyName,\n              created_at: moment(result.vehicle.date_created).format(MOMENT_FORMAT),\n              key: result.key.sid,\n              secret: result.key.secret\n            }, extraInfo),\n            driving_data: []\n          };\n          vehicles[result.vehicle.uniqueName] = vehicleAdded;          \n          initVehicleExtraInfo(result.vehicle.uniqueName, extraInfo)\n          .then(function () {\n            subscribeToVehicleData(result.vehicle.uniqueName);\n            callback(null, vehicleAdded);\n          });\n        } else {\n          callback(result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        callback({success: false, error: error});\n        console.error(\"failed to send add vehicle request:\", textStatus, error.toString());\n      });\n    },\n\n    deleteVehicle: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=delete&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          delete vehicles[vehicleId];\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to delete vehicle\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send delete vehicle request:\", textStatus, error.toString());\n      });\n    },\n\n    generateKey: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=genkey&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          vehicles[vehicleId].info.key = result.key.sid;\n          vehicles[vehicleId].info.secret = result.key.secret;\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to generate key\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send generate key request:\", textStatus, error.toString());\n      });\n    },\n\n    call: function (vehicle, currentTarget) {\n      var activeConnection = Twilio.Device.activeConnection();\n      console.log(\"call\", vehicle);\n      if (!vehicle.voiceConnection) {\n        $(\".btn-call\").prop('disabled', true);\n        $(currentTarget).prop('disabled', false);\n        if (!activeConnection) {\n          console.log(\"call.connect\");\n          $(currentTarget).addClass('btn-danger');\n          $(currentTarget).html(\"End Call\");\n          Twilio.Device.disconnect(function () {\n            console.log(\"call.disconnected\");\n            $(\".btn-call\").prop('disabled', false);\n            $(currentTarget).removeClass('btn-danger');\n            $(currentTarget).html(\"Call\");\n          });\n          vehicle.voiceConnection = Twilio.Device.connect({ number: vehicle.info.mobile });\n        } else {\n          console.log(\"call.incall\");\n        }\n      } else {\n        console.log(\"call.disconnect\");\n        vehicle.voiceConnection.disconnect();\n        vehicle.voiceConnection = null;\n        $(\".btn-call\").prop('disabled', false);\n      }\n    },\n\n    checkLoggedIn: function () {\n      if (!auth) {\n        callbacks.authRequired();\n      }\n    },\n\n    login: function (username, password) {\n      var that = this;\n      auth = \"username=\" + username + \"&pincode=\" + password;\n      this.updateToken(function (syncToken, twimlAppToken) {\n        syncClient = new SyncClient(syncToken);\n        Twilio.Device.setup(twimlAppToken);\n        that.refreshVehicleList();\n        callbacks.onAuthenticated();\n      });\n    },\n\n    init: function () {\n      this.checkLoggedIn();\n      //this.login(\"trump\", \"2016\");\n    }\n\t};\n};\n\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(163);\n\nvar vehicleView = __webpack_require__(6);\n\nvar all_maps;\nvar infowindows_map;\n\nvar dashboardView = {\n  init: function ($scope, latestStats) {\n    all_maps = {};\n    infowindows_map = {};\n\n    for (var id in $scope.vehicles) {\n      var vehicle = $scope.vehicles[id];\n      vehicle.driving_data.forEach(function (data) {\n        dashboardView.onVehicleData(vehicle, data);\n        dashboardView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n      });\n    }\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (!infowindows_map[vehicle.info.id]) {\n      var mapElementName = 'map-'+vehicle.info.id;\n      var newMap = vehicleView.initMapElement(mapElementName);\n      all_maps[vehicle.info.id] = newMap;  \n      infowindows_map[vehicle.info.id] = {};\n    }\n    var map = all_maps[vehicle.info.id];\n    var infowindows = infowindows_map[vehicle.info.id];\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    if (!stats) return;\n\n    var vehicleElemementName = 'vehicle'+vehicle.info.id;\n\n    vehicleView.updateStats(vehicleElemementName, stats);\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(164);\n\nvar loginView = {\n    init: function (app, auth) {\n        $('#input-form-submit').click(function () {\n            app.login(auth.username, auth.password);\n        });\n    }\n};\n\nmodule.exports = loginView;\n\n\n/***/ }),\n\n/***/ 129:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(166);\n\nvar $ = __webpack_require__(1);\n\nvar vehicleListView = {\n  init: function () {\n    $('.add-vehicle-show').click(function() {\n      $(this).hide();\n      $('.add-vehicle').fadeIn(333);\n      $('#id').val('');\n      $('#name').val('');\n      $('#sim_sid').val('');\n    });\n    $('.add-vehicle-cancel').click(function() {\n      $('.add-vehicle').hide();\n      $('.add-vehicle-show').fadeIn(333);\n    });\n  },\n\n  onVehicleAddingFailed: function (err) {\n    $('#add-vehicle-failed').text(JSON.stringify(err));\n  },\n\n  onVehicleAdded: function () {\n    $('.add-vehicle').hide();\n    $('.add-vehicle-show').fadeIn(333);\n  }\n}\n\nmodule.exports = vehicleListView;\n\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n\n/***/ 132:\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ 133:\n/***/ (function(module, exports) {\n\nmodule.exports = undefined;\n\n/***/ }),\n\n/***/ 134:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(132);\n__webpack_require__(133);\n\n// style sheets\n__webpack_require__(3);\n__webpack_require__(4);\n\n// index.html\n__webpack_require__(131);\n\nvar loginView = __webpack_require__(128);\nvar dashboardView = __webpack_require__(127);\nvar vehicleView = __webpack_require__(6);\nvar vehicleListView = __webpack_require__(129);\nvar currentView;\nvar $currentViewScope;\n\nvar auth = {};\nvar n_data_map = {};\nvar total_speed_map = {};\nvar total_driver_scores_map = {};\nvar current_infowindow = null;\nvar latestStats = {};\n\nfunction initVehicleStats(vehicle) {\n  if (!(vehicle.info.id in n_data_map)) {\n    n_data_map[vehicle.info.id] = 0;\n    total_speed_map[vehicle.info.id] = 0;\n    total_driver_scores_map[vehicle.info.id] = 0;\n  }\n}\n\nfunction updateVehicleStats(vehicle, data) {\n  initVehicleStats(vehicle);\n\n  var n_data = ++n_data_map[vehicle.info.id];\n  var total_speed = total_speed_map[vehicle.info.id];\n  var total_driver_scores = total_driver_scores_map[vehicle.info.id];\n\n  var stats = {\n    miles : (data.miles).toFixed(0),\n    avg_speed : (total_speed/n_data).toFixed(0),\n    driver_score : (total_driver_scores/n_data).toFixed(0),\n    fuel : (data.fuel).toFixed(0),\n    brake : (data.brake).toFixed(0),\n    runtime : data.runtime\n  };\n\n  total_speed_map[vehicle.info.id] =  total_speed_map[vehicle.info.id] + data.speed;\n  total_driver_scores_map[vehicle.info.id] = total_driver_scores_map[vehicle.info.id] + data.avgT;\n\n  latestStats[vehicle.info.id] = stats;\n}\n\nvar App = __webpack_require__(126);\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (currentView.onVehicleData) currentView.onVehicleData(vehicle, data);\n    if (vehicle.info.type === \"CAR\") {\n      updateVehicleStats(vehicle, data);\n      if (currentView.onVehicleStats) currentView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n    }\n  },\n\n  onAuthenticated: function () {\n    window.location.href = '/#!/dashboard';\n    $currentViewScope.$apply();\n  },\n\n  authFailed: function (reason) {\n    auth.reason = reason;\n    window.location.href = '/#!/login';\n    $currentViewScope.$apply();\n  },\n\n  authRequired: function () {\n    auth.reason = \"\";\n    window.location.href = '/#!/login';\n  },\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('LoginViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.auth = auth;\n    currentView = loginView;\n    $timeout(function () {\n      loginView.init(app, $scope.auth);\n    });\n  }])\n  .controller('DashboardViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    currentView = dashboardView;\n    // use timeout service to wait until view is loaded\n    $timeout(function () {\n      dashboardView.init($scope, latestStats);\n    }, 0);\n  }])\n  .controller('VehicleViewCtrl', ['$routeParams', '$scope', '$timeout', function ($routeParams, $scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    $scope.id = $routeParams.id;\n    $scope.vehicle = app.vehicles[$routeParams.id];\n    currentView = vehicleView;\n    if ($scope.vehicle) {\n      $timeout(function () {\n        vehicleView.init($scope);\n        vehicleView.onVehicleStats($scope.vehicle, latestStats[$scope.vehicle.info.id]);\n      }, 0);\n    }\n  }])\n  .controller('VehicleListViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.newVehicle = {};\n    $scope.addVehicle = function () {\n      var err = app.addVehicle(angular.copy($scope.newVehicle), function (err, vehicleAdded) {\n        if (err) {\n          vehicleListView.onVehicleAddingFailed(err);\n        } else {\n          $scope.vehicleAdded = vehicleAdded;\n          vehicleListView.onVehicleAdded();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteVehicle = function (vehicleId) {\n      app.deleteVehicle(vehicleId);\n    };\n    $scope.generateVehicleKey = function (vehicleId) {\n      app.generateKey(vehicleId);\n    };\n    currentView = vehicleListView;\n    vehicleListView.init();\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: \"views/dashboard.html\" } )\n      .when('/vehicles/:id', { controller: 'VehicleViewCtrl', templateUrl: \"views/vehicle.html\" } )\n      .when('/vehicles', { controller: 'VehicleListViewCtrl', templateUrl: \"views/vehicle_list.html\" } )\n      .when('/login', { controller: 'LoginViewCtrl', templateUrl: 'views/login.html' })\n      .otherwise({ redirectTo: '/dashboard' }); \n  }]);\n\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, exports) {\n\nvar path = 'views/dashboard.html';\nvar html = \"<h1>Active Vehicles</h1>\\n\\n<h3 ng-hide=\\\"vehicles.length\\\" class=\\\"ng-hide\\\">There are currently no vehicles on the road.</h3>\\n\\n<div ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.id }} | {{vehicle.info.name}} <a href=\\\"#!/vehicles/{{vehicle.info.id}}\\\">(view past drives)</a></h3>\\n  <h4>Current trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map-{{vehicle.info.id}}\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, exports) {\n\nvar path = 'views/login.html';\nvar html = \"<div class=\\\"login-form container\\\">\\n    <p id=\\\"login-reason\\\" class=\\\"text-warning\\\">{{ auth.reason }}</p>\\n    <label><b>Username</b></label>\\n    <input type=\\\"text\\\" id=\\\"input-form-username\\\" placeholder=\\\"Enter Username\\\" ng-model=\\\"auth.username\\\">\\n\\n    <label><b>Password</b></label>\\n    <input type=\\\"password\\\" id=\\\"input-form-password\\\" placeholder=\\\"Enter Password\\\" ng-model=\\\"auth.password\\\">\\n\\n    <button id=\\\"input-form-submit\\\" type=\\\"submit\\\">Login</button>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports) {\n\nvar path = 'views/vehicle.html';\nvar html = \"<div class=\\\"jumbotron vehicle \\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.name }}</h3>\\n  <h4>Total trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, exports) {\n\nvar path = 'views/vehicle_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Vehicles</h1>\\n    </div>\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Mobile</th>\\n<!--\\n            <th>Twilio SIM SID</th>\\n-->\\n            <th>Key</th>\\n            <th>Created</th>\\n            <th>Operations</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\" ng-class=\\\"{'text-success': vehicleAdded.info.id === vehicle.info.id}\\\">\\n            <td>{{ vehicle.info.id }}</td>\\n            <td>{{ vehicle.info.name }}</td>\\n            <td>{{ vehicle.info.mobile }}</td>\\n<!--\\n            <td>{{ vehicle.info.sim_sid }}</td>\\n            <td>{{ vehicle.info.key }} <small ng-if=\\\"vehicle.info.secret\\\" class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></td>\\n-->\\n            <td>\\n              <div ng-if=\\\"vehicle.info.key\\\">{{ vehicle.info.key }} <small class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></div>\\n              <div ng-if=\\\"!vehicle.info.key\\\" class=\\\"text-danger\\\">Hidden</div>\\n            </td>\\n            <td>{{ vehicle.info.created_at }}</td>\\n<!--\\n            <td><a href=\\\"#!/vehicles/{{ vehicle.info.id }}/edit\\\" class=\\\"btn btn-xs btn-success\\\">Edit</a></td>\\n-->\\n            <td>\\n              <button ng-click=\\\"generateVehicleKey(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Generate New Key</button>\\n              <button ng-click=\\\"deleteVehicle(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-vehicle-show\\\">Add New Vehicle</a>\\n\\n<div class=\\\"row add-vehicle\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addVehicle()\\\">\\n      <fieldset>\\n        <legend>New Vehicle</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"type\\\" class=\\\"col-lg-2 control-label\\\">Type</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <select type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.type\\\" ng-init=\\\"newVehicle.type='BIKE'\\\" id=\\\"type\\\" autocomplete=\\\"off\\\">\\n                <option value=\\\"CAR\\\">Car</option>\\n                <option value=\\\"BIKE\\\">Bicycle</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.id\\\" id=\\\"id\\\" placeholder=\\\"Id\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobile\\\" class=\\\"col-lg-2 control-label\\\">Mobile</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile Number\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n<!--\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.sim_sid\\\" id=\\\"sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n-->\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-vehicle-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-vehicle-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 171:\n/***/ (function(module, exports) {\n\nmodule.exports = Twilio.Sync;\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(165);\n\nvar $ = __webpack_require__(1);\n\nvar map;\nvar infowindows = {};\nvar current_infowindow;\n\nvar vehicleView = {\n  init: function ($scope) {\n    map = vehicleView.initMapElement('map');\n    $scope.vehicle.driving_data.forEach(function (data) {\n      vehicleView.onVehicleData($scope.vehicle.info.id, data);\n    });\n  },\n\n  initMapElement: function (mapElementName) {\n    var map = new google.maps.Map(document.getElementById(mapElementName), {\n      zoom: 14\n    });\n    return map;\n  },\n\n  addDataToMap: function (map, infowindows, data) {\n    var latLon = { lat: data.lat, lng: data.lon}\n    var marker = new google.maps.Marker({\n      position: latLon,\n      map: map,\n      title: String(data.id)\n    });\n\n    var content_string = '<div class=\"infowindow-label\"> \\\n                            <h1>Point data</h1>' +\n                            (!!data.miles ? '<p><span class=\"label label-default\">Distance:</span> <span class=\"value\">'+data.miles.toFixed(0)+' Miles</span></p>' : '') +\n                            (!!data.speed ? '<p><span class=\"label label-default\">Speed:</span> <span class=\"value\">'+data.speed.toFixed(0)+' mph</span></p>' : '') +\n                            (!!data.fuel ? '<p><span class=\"label label-default\">Fuel:</span> <span class=\"value\">'+data.fuel.toFixed(0)+'%</span></p>' : '') +\n                          '</div>';\n\n    var infowindow = new google.maps.InfoWindow({\n      content: content_string,\n    });\n    infowindows[data.id] = infowindow;\n    map.panTo(marker.getPosition());\n\n    google.maps.event.addListener(marker, 'click', function(e) {\n      if(current_infowindow) {\n        current_infowindow.close();\n      }\n      infowindows[this.getTitle()].open(map, this);\n      current_infowindow = infowindows[this.getTitle()];\n    });\n  },\n\n  updateStats: function (vehicleElemementName, stats) {\n    if (!stats) return;\n\n    $('.' + vehicleElemementName + ' .miles span').text(stats.miles);\n    $('.' + vehicleElemementName + ' .speed span').text(stats.avg_speed);\n    $('.' + vehicleElemementName + ' .fuel span').text(stats.fuel);\n    $('.' + vehicleElemementName + ' .brake span').text(stats.brake);\n\n    var runtime_string;\n    if(stats.runtime < 60) {\n      runtime_string = stats.runtime+' seconds';\n    } else if(stats.runtime < 3600) {\n      runtime_string = (stats.runtime/60).toFixed(0)+\" minutes\";\n    } else {\n      var hours = Math.floor(runtime/3600);\n      var minutes = ((runtime - (hours*3600))/60).toFixed(0);\n      runtime_string = hours+\" hours and \"+minutes+\" minutes\";\n    }\n\n    $('.' + vehicleElemementName + ' .runtime').text(runtime_string);    \n  },\n\n  onVehicleData: function (vehicle, data) {\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    vehicleView.updateStats('vehicle', stats);\n  }  \n};\n\nmodule.exports = vehicleView;\n\n\n/***/ })\n\n},[134]);\n\n\n// WEBPACK FOOTER //\n// index.js","'use strict';\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\nvar moment = require(\"moment\");\n\nmodule.exports = function(callbacks) {\n  var $ = require(\"jquery\");\n  var SyncClient = require(\"twilio-sync\").Client;\n  var syncClient;\n  var token;\n  var auth;\n\n  var vehicles = {};\n\n\n  function initVehicleExtraInfo(id, extraInfo) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"initVehicleExtraInfo\", id, extraInfo);\n      return document.set(extraInfo);\n    });\n  }\n\n  function fetchVehicleExtraInfo(id) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"fetchVehicleExtraInfo\", id, document.value);\n      return document.value;\n    });\n  };\n\n  function subscribeToVehicleData(id) {\n    syncClient.list(\"vehicle-\" + id + \"-data\").then(function (list) {\n      list.getItems({ limit: 100, order: \"desc\" }).then(function (page) {\n        console.info(\"items arrived\", id, page.items.length);\n        vehicles[id].driving_data = page.items.map(function (item) {\n          item.data.value.id = item.index;\n          callbacks.onVehicleData(vehicles[id], item.data.value);\n          return item.data.value;\n        });\n      });\n      list.on(\"itemAdded\", function (item) {\n        console.info(\"itemAdded\", id, item);\n        item.data.value.id = item.index;\n        vehicles[id].driving_data.push(item.data.value);\n        callbacks.onVehicleData(vehicles[id], item.data.value);\n      });\n    });\n  };\n\n\treturn {\n    vehicles: vehicles,\n\n    updateToken: function (cb) {\n      var that = this;\n      return $.get(\"/authenticate?\" + auth, function (result) {\n        if (result.success) {\n          console.log(\"token updated:\", result);\n          if (cb) {\n            cb(result.sync_token, result.twiml_app_token);\n          } else {\n            syncClient.updateToken(result.sync_token);\n            Twilio.Device.setup(result.twiml_app_token);\n          }\n          setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n        } else {\n          console.error(\"failed to authenticate the user: \", result.error);\n          auth=\"\";\n          callbacks.authFailed(result.error);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send authentication request:\", textStatus, error);\n        auth=\"\";\n        callbacks.authFailed(error);\n      });\n    },\n\n    refreshVehicleList: function () {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=list\", function (result) {\n        if (result.success) {\n          $.when.apply($, $.map(result.vehicles, function (vehicle) {\n            var id = vehicle.uniqueName;\n            vehicles[id] = {\n              info: {\n                id: id,\n                name: vehicle.friendlyName,\n                created_at: moment(vehicle.date_created).format(MOMENT_FORMAT)\n              },\n              driving_data: []\n            };\n            return fetchVehicleExtraInfo(id).then(function (extraInfo) {\n              vehicles[id].info = $.extend(vehicles[id].info, extraInfo);\n              subscribeToVehicleData(vehicle.uniqueName);\n            });\n          })).done(function () {\n            callbacks.refresh();\n          });\n        } else {\n          console.error(\"failed to list vehicles:\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send list vehicles request:\", textStatus, error.toString());\n      });\n    },\n\n    addVehicle: function (newVehicle, callback) {\n      if (!newVehicle.id) {\n        return callback({success: false, error: \"Vehicle id should not be empty\"});\n      }\n      $.get(\"/fleetmanager?\" + auth + \"&op=add&vehicle_id=\"+newVehicle.id.toUpperCase()+\"&vehicle_name=\"+(newVehicle.name||\"\"), function (result) {\n        if (result.success) {\n          var extraInfo = {\n            type: newVehicle.type,\n            mobile: newVehicle.mobile,\n          };\n          var vehicleAdded = {\n            info: $.extend({\n              id: result.vehicle.uniqueName,\n              name: result.vehicle.friendlyName,\n              created_at: moment(result.vehicle.date_created).format(MOMENT_FORMAT),\n              key: result.key.sid,\n              secret: result.key.secret\n            }, extraInfo),\n            driving_data: []\n          };\n          vehicles[result.vehicle.uniqueName] = vehicleAdded;          \n          initVehicleExtraInfo(result.vehicle.uniqueName, extraInfo)\n          .then(function () {\n            subscribeToVehicleData(result.vehicle.uniqueName);\n            callback(null, vehicleAdded);\n          });\n        } else {\n          callback(result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        callback({success: false, error: error});\n        console.error(\"failed to send add vehicle request:\", textStatus, error.toString());\n      });\n    },\n\n    deleteVehicle: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=delete&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          delete vehicles[vehicleId];\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to delete vehicle\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send delete vehicle request:\", textStatus, error.toString());\n      });\n    },\n\n    generateKey: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=genkey&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          vehicles[vehicleId].info.key = result.key.sid;\n          vehicles[vehicleId].info.secret = result.key.secret;\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to generate key\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send generate key request:\", textStatus, error.toString());\n      });\n    },\n\n    call: function (vehicle, currentTarget) {\n      var activeConnection = Twilio.Device.activeConnection();\n      console.log(\"call\", vehicle);\n      if (!vehicle.voiceConnection) {\n        $(\".btn-call\").prop('disabled', true);\n        $(currentTarget).prop('disabled', false);\n        if (!activeConnection) {\n          console.log(\"call.connect\");\n          $(currentTarget).addClass('btn-danger');\n          $(currentTarget).html(\"End Call\");\n          Twilio.Device.disconnect(function () {\n            console.log(\"call.disconnected\");\n            $(\".btn-call\").prop('disabled', false);\n            $(currentTarget).removeClass('btn-danger');\n            $(currentTarget).html(\"Call\");\n          });\n          vehicle.voiceConnection = Twilio.Device.connect({ number: vehicle.info.mobile });\n        } else {\n          console.log(\"call.incall\");\n        }\n      } else {\n        console.log(\"call.disconnect\");\n        vehicle.voiceConnection.disconnect();\n        vehicle.voiceConnection = null;\n        $(\".btn-call\").prop('disabled', false);\n      }\n    },\n\n    checkLoggedIn: function () {\n      if (!auth) {\n        callbacks.authRequired();\n      }\n    },\n\n    login: function (username, password) {\n      var that = this;\n      auth = \"username=\" + username + \"&pincode=\" + password;\n      this.updateToken(function (syncToken, twimlAppToken) {\n        syncClient = new SyncClient(syncToken);\n        Twilio.Device.setup(twimlAppToken);\n        that.refreshVehicleList();\n        callbacks.onAuthenticated();\n      });\n    },\n\n    init: function () {\n      this.checkLoggedIn();\n      //this.login(\"trump\", \"2016\");\n    }\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 126\n// module chunks = 0","require(\"../views/dashboard.html\");\n\nvar vehicleView = require(\"./vehicleView\");\n\nvar all_maps;\nvar infowindows_map;\n\nvar dashboardView = {\n  init: function ($scope, latestStats) {\n    all_maps = {};\n    infowindows_map = {};\n\n    for (var id in $scope.vehicles) {\n      var vehicle = $scope.vehicles[id];\n      vehicle.driving_data.forEach(function (data) {\n        dashboardView.onVehicleData(vehicle, data);\n        dashboardView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n      });\n    }\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (!infowindows_map[vehicle.info.id]) {\n      var mapElementName = 'map-'+vehicle.info.id;\n      var newMap = vehicleView.initMapElement(mapElementName);\n      all_maps[vehicle.info.id] = newMap;  \n      infowindows_map[vehicle.info.id] = {};\n    }\n    var map = all_maps[vehicle.info.id];\n    var infowindows = infowindows_map[vehicle.info.id];\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    if (!stats) return;\n\n    var vehicleElemementName = 'vehicle'+vehicle.info.id;\n\n    vehicleView.updateStats(vehicleElemementName, stats);\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/dashboardView.js\n// module id = 127\n// module chunks = 0","require(\"../views/login.html\");\n\nvar loginView = {\n    init: function (app, auth) {\n        $('#input-form-submit').click(function () {\n            app.login(auth.username, auth.password);\n        });\n    }\n};\n\nmodule.exports = loginView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/loginView.js\n// module id = 128\n// module chunks = 0","require(\"../views/vehicle_list.html\");\n\nvar $ = require(\"jquery\");\n\nvar vehicleListView = {\n  init: function () {\n    $('.add-vehicle-show').click(function() {\n      $(this).hide();\n      $('.add-vehicle').fadeIn(333);\n      $('#id').val('');\n      $('#name').val('');\n      $('#sim_sid').val('');\n    });\n    $('.add-vehicle-cancel').click(function() {\n      $('.add-vehicle').hide();\n      $('.add-vehicle-show').fadeIn(333);\n    });\n  },\n\n  onVehicleAddingFailed: function (err) {\n    $('#add-vehicle-failed').text(JSON.stringify(err));\n  },\n\n  onVehicleAdded: function () {\n    $('.add-vehicle').hide();\n    $('.add-vehicle-show').fadeIn(333);\n  }\n}\n\nmodule.exports = vehicleListView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/vehicleListView.js\n// module id = 129\n// module chunks = 0","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 131\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 132\n// module chunks = 0","module.exports = undefined;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"angular-route\"}\n// module id = 133\n// module chunks = 0","'use strict';\n\nvar angular = require(\"angular\");\nrequire(\"angular-route\");\n\n// style sheets\nrequire(\"bootstrap-webpack\");\nrequire(\"../scss/main.scss\");\n\n// index.html\nrequire(\"../index.html\");\n\nvar loginView = require(\"./loginView.js\");\nvar dashboardView = require(\"./dashboardView\");\nvar vehicleView = require(\"./vehicleView\");\nvar vehicleListView = require(\"./vehicleListView\");\nvar currentView;\nvar $currentViewScope;\n\nvar auth = {};\nvar n_data_map = {};\nvar total_speed_map = {};\nvar total_driver_scores_map = {};\nvar current_infowindow = null;\nvar latestStats = {};\n\nfunction initVehicleStats(vehicle) {\n  if (!(vehicle.info.id in n_data_map)) {\n    n_data_map[vehicle.info.id] = 0;\n    total_speed_map[vehicle.info.id] = 0;\n    total_driver_scores_map[vehicle.info.id] = 0;\n  }\n}\n\nfunction updateVehicleStats(vehicle, data) {\n  initVehicleStats(vehicle);\n\n  var n_data = ++n_data_map[vehicle.info.id];\n  var total_speed = total_speed_map[vehicle.info.id];\n  var total_driver_scores = total_driver_scores_map[vehicle.info.id];\n\n  var stats = {\n    miles : (data.miles).toFixed(0),\n    avg_speed : (total_speed/n_data).toFixed(0),\n    driver_score : (total_driver_scores/n_data).toFixed(0),\n    fuel : (data.fuel).toFixed(0),\n    brake : (data.brake).toFixed(0),\n    runtime : data.runtime\n  };\n\n  total_speed_map[vehicle.info.id] =  total_speed_map[vehicle.info.id] + data.speed;\n  total_driver_scores_map[vehicle.info.id] = total_driver_scores_map[vehicle.info.id] + data.avgT;\n\n  latestStats[vehicle.info.id] = stats;\n}\n\nvar App = require(\"./app\");\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (currentView.onVehicleData) currentView.onVehicleData(vehicle, data);\n    if (vehicle.info.type === \"CAR\") {\n      updateVehicleStats(vehicle, data);\n      if (currentView.onVehicleStats) currentView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n    }\n  },\n\n  onAuthenticated: function () {\n    window.location.href = '/#!/dashboard';\n    $currentViewScope.$apply();\n  },\n\n  authFailed: function (reason) {\n    auth.reason = reason;\n    window.location.href = '/#!/login';\n    $currentViewScope.$apply();\n  },\n\n  authRequired: function () {\n    auth.reason = \"\";\n    window.location.href = '/#!/login';\n  },\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('LoginViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.auth = auth;\n    currentView = loginView;\n    $timeout(function () {\n      loginView.init(app, $scope.auth);\n    });\n  }])\n  .controller('DashboardViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    currentView = dashboardView;\n    // use timeout service to wait until view is loaded\n    $timeout(function () {\n      dashboardView.init($scope, latestStats);\n    }, 0);\n  }])\n  .controller('VehicleViewCtrl', ['$routeParams', '$scope', '$timeout', function ($routeParams, $scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    $scope.id = $routeParams.id;\n    $scope.vehicle = app.vehicles[$routeParams.id];\n    currentView = vehicleView;\n    if ($scope.vehicle) {\n      $timeout(function () {\n        vehicleView.init($scope);\n        vehicleView.onVehicleStats($scope.vehicle, latestStats[$scope.vehicle.info.id]);\n      }, 0);\n    }\n  }])\n  .controller('VehicleListViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.newVehicle = {};\n    $scope.addVehicle = function () {\n      var err = app.addVehicle(angular.copy($scope.newVehicle), function (err, vehicleAdded) {\n        if (err) {\n          vehicleListView.onVehicleAddingFailed(err);\n        } else {\n          $scope.vehicleAdded = vehicleAdded;\n          vehicleListView.onVehicleAdded();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteVehicle = function (vehicleId) {\n      app.deleteVehicle(vehicleId);\n    };\n    $scope.generateVehicleKey = function (vehicleId) {\n      app.generateKey(vehicleId);\n    };\n    currentView = vehicleListView;\n    vehicleListView.init();\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: \"views/dashboard.html\" } )\n      .when('/vehicles/:id', { controller: 'VehicleViewCtrl', templateUrl: \"views/vehicle.html\" } )\n      .when('/vehicles', { controller: 'VehicleListViewCtrl', templateUrl: \"views/vehicle_list.html\" } )\n      .when('/login', { controller: 'LoginViewCtrl', templateUrl: 'views/login.html' })\n      .otherwise({ redirectTo: '/dashboard' }); \n  }]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 134\n// module chunks = 0","var path = 'views/dashboard.html';\nvar html = \"<h1>Active Vehicles</h1>\\n\\n<h3 ng-hide=\\\"vehicles.length\\\" class=\\\"ng-hide\\\">There are currently no vehicles on the road.</h3>\\n\\n<div ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.id }} | {{vehicle.info.name}} <a href=\\\"#!/vehicles/{{vehicle.info.id}}\\\">(view past drives)</a></h3>\\n  <h4>Current trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map-{{vehicle.info.id}}\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/dashboard.html\n// module id = 163\n// module chunks = 0","var path = 'views/login.html';\nvar html = \"<div class=\\\"login-form container\\\">\\n    <p id=\\\"login-reason\\\" class=\\\"text-warning\\\">{{ auth.reason }}</p>\\n    <label><b>Username</b></label>\\n    <input type=\\\"text\\\" id=\\\"input-form-username\\\" placeholder=\\\"Enter Username\\\" ng-model=\\\"auth.username\\\">\\n\\n    <label><b>Password</b></label>\\n    <input type=\\\"password\\\" id=\\\"input-form-password\\\" placeholder=\\\"Enter Password\\\" ng-model=\\\"auth.password\\\">\\n\\n    <button id=\\\"input-form-submit\\\" type=\\\"submit\\\">Login</button>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/login.html\n// module id = 164\n// module chunks = 0","var path = 'views/vehicle.html';\nvar html = \"<div class=\\\"jumbotron vehicle \\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.name }}</h3>\\n  <h4>Total trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/vehicle.html\n// module id = 165\n// module chunks = 0","var path = 'views/vehicle_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Vehicles</h1>\\n    </div>\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Mobile</th>\\n<!--\\n            <th>Twilio SIM SID</th>\\n-->\\n            <th>Key</th>\\n            <th>Created</th>\\n            <th>Operations</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\" ng-class=\\\"{'text-success': vehicleAdded.info.id === vehicle.info.id}\\\">\\n            <td>{{ vehicle.info.id }}</td>\\n            <td>{{ vehicle.info.name }}</td>\\n            <td>{{ vehicle.info.mobile }}</td>\\n<!--\\n            <td>{{ vehicle.info.sim_sid }}</td>\\n            <td>{{ vehicle.info.key }} <small ng-if=\\\"vehicle.info.secret\\\" class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></td>\\n-->\\n            <td>\\n              <div ng-if=\\\"vehicle.info.key\\\">{{ vehicle.info.key }} <small class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></div>\\n              <div ng-if=\\\"!vehicle.info.key\\\" class=\\\"text-danger\\\">Hidden</div>\\n            </td>\\n            <td>{{ vehicle.info.created_at }}</td>\\n<!--\\n            <td><a href=\\\"#!/vehicles/{{ vehicle.info.id }}/edit\\\" class=\\\"btn btn-xs btn-success\\\">Edit</a></td>\\n-->\\n            <td>\\n              <button ng-click=\\\"generateVehicleKey(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Generate New Key</button>\\n              <button ng-click=\\\"deleteVehicle(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-vehicle-show\\\">Add New Vehicle</a>\\n\\n<div class=\\\"row add-vehicle\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addVehicle()\\\">\\n      <fieldset>\\n        <legend>New Vehicle</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"type\\\" class=\\\"col-lg-2 control-label\\\">Type</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <select type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.type\\\" ng-init=\\\"newVehicle.type='BIKE'\\\" id=\\\"type\\\" autocomplete=\\\"off\\\">\\n                <option value=\\\"CAR\\\">Car</option>\\n                <option value=\\\"BIKE\\\">Bicycle</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.id\\\" id=\\\"id\\\" placeholder=\\\"Id\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobile\\\" class=\\\"col-lg-2 control-label\\\">Mobile</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile Number\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n<!--\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.sim_sid\\\" id=\\\"sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n-->\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-vehicle-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-vehicle-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/vehicle_list.html\n// module id = 166\n// module chunks = 0","module.exports = Twilio.Sync;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Twilio.Sync\"\n// module id = 171\n// module chunks = 0","require(\"../views/vehicle.html\");\n\nvar $ = require(\"jquery\");\n\nvar map;\nvar infowindows = {};\nvar current_infowindow;\n\nvar vehicleView = {\n  init: function ($scope) {\n    map = vehicleView.initMapElement('map');\n    $scope.vehicle.driving_data.forEach(function (data) {\n      vehicleView.onVehicleData($scope.vehicle.info.id, data);\n    });\n  },\n\n  initMapElement: function (mapElementName) {\n    var map = new google.maps.Map(document.getElementById(mapElementName), {\n      zoom: 14\n    });\n    return map;\n  },\n\n  addDataToMap: function (map, infowindows, data) {\n    var latLon = { lat: data.lat, lng: data.lon}\n    var marker = new google.maps.Marker({\n      position: latLon,\n      map: map,\n      title: String(data.id)\n    });\n\n    var content_string = '<div class=\"infowindow-label\"> \\\n                            <h1>Point data</h1>' +\n                            (!!data.miles ? '<p><span class=\"label label-default\">Distance:</span> <span class=\"value\">'+data.miles.toFixed(0)+' Miles</span></p>' : '') +\n                            (!!data.speed ? '<p><span class=\"label label-default\">Speed:</span> <span class=\"value\">'+data.speed.toFixed(0)+' mph</span></p>' : '') +\n                            (!!data.fuel ? '<p><span class=\"label label-default\">Fuel:</span> <span class=\"value\">'+data.fuel.toFixed(0)+'%</span></p>' : '') +\n                          '</div>';\n\n    var infowindow = new google.maps.InfoWindow({\n      content: content_string,\n    });\n    infowindows[data.id] = infowindow;\n    map.panTo(marker.getPosition());\n\n    google.maps.event.addListener(marker, 'click', function(e) {\n      if(current_infowindow) {\n        current_infowindow.close();\n      }\n      infowindows[this.getTitle()].open(map, this);\n      current_infowindow = infowindows[this.getTitle()];\n    });\n  },\n\n  updateStats: function (vehicleElemementName, stats) {\n    if (!stats) return;\n\n    $('.' + vehicleElemementName + ' .miles span').text(stats.miles);\n    $('.' + vehicleElemementName + ' .speed span').text(stats.avg_speed);\n    $('.' + vehicleElemementName + ' .fuel span').text(stats.fuel);\n    $('.' + vehicleElemementName + ' .brake span').text(stats.brake);\n\n    var runtime_string;\n    if(stats.runtime < 60) {\n      runtime_string = stats.runtime+' seconds';\n    } else if(stats.runtime < 3600) {\n      runtime_string = (stats.runtime/60).toFixed(0)+\" minutes\";\n    } else {\n      var hours = Math.floor(runtime/3600);\n      var minutes = ((runtime - (hours*3600))/60).toFixed(0);\n      runtime_string = hours+\" hours and \"+minutes+\" minutes\";\n    }\n\n    $('.' + vehicleElemementName + ' .runtime').text(runtime_string);    \n  },\n\n  onVehicleData: function (vehicle, data) {\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    vehicleView.updateStats('vehicle', stats);\n  }  \n};\n\nmodule.exports = vehicleView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/vehicleView.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}