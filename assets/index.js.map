{"version":3,"sources":["webpack:///index.js","webpack:///./js/app.js","webpack:///./js/dashboardView.js","webpack:///./js/loginView.js","webpack:///./js/vehicleListView.js","webpack:///./index.html","webpack:///external \"angular\"","webpack:///external {\"amd\":\"angular-route\"}","webpack:///./js/index.js","webpack:///./views/dashboard.html","webpack:///./views/login.html","webpack:///./views/vehicle.html","webpack:///./views/vehicle_list.html","webpack:///external \"Twilio.Sync\"","webpack:///./js/vehicleView.js"],"names":["webpackJsonp","126","module","exports","__webpack_require__","moment","callbacks","initVehicleExtraInfo","id","extraInfo","syncClient","document","then","console","log","set","fetchVehicleExtraInfo","value","subscribeToVehicleData","list","getItems","limit","page","info","items","length","vehicles","driving_data","map","item","data","index","onVehicleData","on","push","auth","$","SyncClient","Client","updateToken","cb","that","this","get","result","success","sync_token","twiml_app_token","Twilio","Device","setup","setTimeout","bind","ttl","error","authFailed","fail","jqXHR","textStatus","refreshVehicleList","when","apply","vehicle","unique_name","name","friendly_name","created_at","date_created","format","extend","done","refresh","addVehicle","newVehicle","callback","toUpperCase","type","mobile","vehicleAdded","key","sid","secret","deleteVehicle","vehicleId","generateKey","call","currentTarget","activeConnection","voiceConnection","disconnect","prop","addClass","html","removeClass","connect","number","checkLoggedIn","authRequired","login","username","password","syncToken","twimlAppToken","onAuthenticated","init","127","all_maps","infowindows_map","vehicleView","dashboardView","$scope","latestStats","forEach","onVehicleStats","mapElementName","newMap","initMapElement","infowindows","addDataToMap","stats","vehicleElemementName","updateStats","128","loginView","app","click","129","vehicleListView","hide","fadeIn","val","onVehicleAddingFailed","err","text","JSON","stringify","onVehicleAdded","131","p","132","angular","133","undefined","134","initVehicleStats","n_data_map","total_speed_map","total_driver_scores_map","updateVehicleStats","n_data","total_speed","total_driver_scores","miles","toFixed","avg_speed","driver_score","fuel","brake","runtime","speed","avgT","currentView","$currentViewScope","App","window","$apply","location","href","reason","controller","$timeout","$routeParams","copy","generateVehicleKey","config","$routeProvider","templateUrl","otherwise","redirectTo","163","path","run","c","put","164","165","166","171","Sync","6","google","maps","Map","getElementById","zoom","latLon","lat","lng","lon","marker","Marker","position","title","String","content_string","infowindow","InfoWindow","content","panTo","getPosition","event","addListener","e","current_infowindow","close","getTitle","open","runtime_string","hours","Math","floor","minutes"],"mappings":"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","file":"index.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 126:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\nvar moment = __webpack_require__(0);\n\nmodule.exports = function(callbacks) {\n  var $ = __webpack_require__(1);\n  var SyncClient = __webpack_require__(171).Client;\n  var syncClient;\n  var token;\n  var auth;\n\n  var vehicles = {};\n\n\n  function initVehicleExtraInfo(id, extraInfo) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"initVehicleExtraInfo\", id, extraInfo);\n      return document.set(extraInfo);\n    });\n  }\n\n  function fetchVehicleExtraInfo(id) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"fetchVehicleExtraInfo\", id, document.value);\n      return document.value;\n    });\n  };\n\n  function subscribeToVehicleData(id) {\n    syncClient.list(\"vehicle-\" + id + \"-data\").then(function (list) {\n      list.getItems({ limit: 100 }).then(function (page) {\n        console.info(\"items arrived\", id, page.items.length);\n        vehicles[id].driving_data = page.items.map(function (item) {\n          item.data.value.id = item.index;\n          callbacks.onVehicleData(vehicles[id], item.data.value);\n          return item.data.value;\n        });\n      });\n      list.on(\"itemAdded\", function (item) {\n        console.info(\"itemAdded\", id, item);\n        item.data.value.id = item.index;\n        vehicles[id].driving_data.push(item.data.value);\n        callbacks.onVehicleData(vehicles[id], item.data.value);\n      });\n    });\n  };\n\n\treturn {\n    vehicles: vehicles,\n\n    updateToken: function (cb) {\n      var that = this;\n      return $.get(\"/authenticate?\" + auth, function (result) {\n        if (result.success) {\n          console.log(\"token updated:\", result);\n          if (cb) {\n            cb(result.sync_token, result.twiml_app_token);\n          } else {\n            syncClient.updateToken(result.sync_token);\n            Twilio.Device.setup(result.twiml_app_token);\n          }\n          setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n        } else {\n          console.error(\"failed to authenticate the user: \", result.error);\n          auth=\"\";\n          callbacks.authFailed(result.error);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send authentication request:\", textStatus, error);\n        auth=\"\";\n        callbacks.authFailed(error);\n      });\n    },\n\n    refreshVehicleList: function () {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=list\", function (result) {\n        if (result.success) {\n          $.when.apply($, $.map(result.vehicles, function (vehicle) {\n            var id = vehicle.unique_name;\n            vehicles[id] = {\n              info: {\n                id: id,\n                name: vehicle.friendly_name,\n                created_at: moment(vehicle.date_created).format(MOMENT_FORMAT)\n              },\n              driving_data: []\n            };\n            return fetchVehicleExtraInfo(id).then(function (extraInfo) {\n              vehicles[id].info = $.extend(vehicles[id].info, extraInfo);\n              subscribeToVehicleData(vehicle.unique_name);\n            });\n          })).done(function () {\n            callbacks.refresh();\n          });\n        } else {\n          console.error(\"failed to list vehicles:\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send list vehicles request:\", textStatus, error);\n      });\n    },\n\n    addVehicle: function (newVehicle, callback) {\n      if (!newVehicle.id) {\n        return callback({success: false, error: \"Vehicle id should not be empty\"});\n      }\n      $.get(\"/fleetmanager?\" + auth + \"&op=add&vehicle_id=\"+newVehicle.id.toUpperCase()+\"&vehicle_name=\"+(newVehicle.name||\"\"), function (result) {\n        if (result.success) {\n          var extraInfo = {\n            type: newVehicle.type,\n            mobile: newVehicle.mobile,\n          };\n          var vehicleAdded = {\n            info: $.extend({\n              id: result.vehicle.unique_name,\n              name: result.vehicle.friendly_name,\n              created_at: moment(result.vehicle.date_created).format(MOMENT_FORMAT),\n              key: result.key.sid,\n              secret: result.key.secret\n            }, extraInfo),\n            driving_data: []\n          };\n          vehicles[result.vehicle.unique_name] = vehicleAdded;          \n          initVehicleExtraInfo(result.vehicle.unique_name, extraInfo)\n          .then(function () {\n            subscribeToVehicleData(result.vehicle.unique_name);\n            callback(null, vehicleAdded);\n          });\n        } else {\n          callback(result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        callback({success: false, error: error});\n        console.error(\"failed to send add vehicle request:\", textStatus, error);\n      });\n    },\n\n    deleteVehicle: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=delete&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          delete vehicles[vehicleId];\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to delete vehicle\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send delete vehicle request:\", textStatus, error);\n      });\n    },\n\n    generateKey: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=genkey&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          vehicles[vehicleId].info.key = result.key.sid;\n          vehicles[vehicleId].info.secret = result.key.secret;\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to generate key\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send generate key request:\", textStatus, error);\n      });\n    },\n\n    call: function (vehicle, currentTarget) {\n      var activeConnection = Twilio.Device.activeConnection();\n      console.log(\"call\", vehicle);\n      if (!vehicle.voiceConnection) {\n        $(\".btn-call\").prop('disabled', true);\n        $(currentTarget).prop('disabled', false);\n        if (!activeConnection) {\n          console.log(\"call.connect\");\n          $(currentTarget).addClass('btn-danger');\n          $(currentTarget).html(\"End Call\");\n          Twilio.Device.disconnect(function () {\n            console.log(\"call.disconnected\");\n            $(\".btn-call\").prop('disabled', false);\n            $(currentTarget).removeClass('btn-danger');\n            $(currentTarget).html(\"Call\");\n          });\n          vehicle.voiceConnection = Twilio.Device.connect({ number: vehicle.info.mobile });\n        } else {\n          console.log(\"call.incall\");\n        }\n      } else {\n        console.log(\"call.disconnect\");\n        vehicle.voiceConnection.disconnect();\n        vehicle.voiceConnection = null;\n        $(\".btn-call\").prop('disabled', false);\n      }\n    },\n\n    checkLoggedIn: function () {\n      if (!auth) {\n        callbacks.authRequired();\n      }\n    },\n\n    login: function (username, password) {\n      var that = this;\n      auth = \"username=\" + username + \"&pincode=\" + password;\n      this.updateToken(function (syncToken, twimlAppToken) {\n        syncClient = new SyncClient(syncToken);\n        Twilio.Device.setup(twimlAppToken);\n        that.refreshVehicleList();\n        callbacks.onAuthenticated();\n      });\n    },\n\n    init: function () {\n      this.checkLoggedIn();\n      this.login(\"trump\", \"2016\");\n    }\n\t};\n};\n\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(163);\n\nvar vehicleView = __webpack_require__(6);\n\nvar all_maps;\nvar infowindows_map;\n\nvar dashboardView = {\n  init: function ($scope, latestStats) {\n    all_maps = {};\n    infowindows_map = {};\n\n    for (var id in $scope.vehicles) {\n      var vehicle = $scope.vehicles[id];\n      vehicle.driving_data.forEach(function (data) {\n        dashboardView.onVehicleData(vehicle, data);\n        dashboardView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n      });\n    }\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (!infowindows_map[vehicle.info.id]) {\n      var mapElementName = 'map-'+vehicle.info.id;\n      var newMap = vehicleView.initMapElement(mapElementName);\n      all_maps[vehicle.info.id] = newMap;  \n      infowindows_map[vehicle.info.id] = {};\n    }\n    var map = all_maps[vehicle.info.id];\n    var infowindows = infowindows_map[vehicle.info.id];\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    if (!stats) return;\n\n    var vehicleElemementName = 'vehicle'+vehicle.info.id;\n\n    vehicleView.updateStats(vehicleElemementName, stats);\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(164);\n\nvar loginView = {\n    init: function (app, auth) {\n        $('#input-form-submit').click(function () {\n            app.login(auth.username, auth.password);\n        });\n    }\n};\n\nmodule.exports = loginView;\n\n\n/***/ }),\n\n/***/ 129:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(166);\n\nvar $ = __webpack_require__(1);\n\nvar vehicleListView = {\n  init: function () {\n    $('.add-vehicle-show').click(function() {\n      $(this).hide();\n      $('.add-vehicle').fadeIn(333);\n      $('#id').val('');\n      $('#name').val('');\n      $('#sim_sid').val('');\n    });\n    $('.add-vehicle-cancel').click(function() {\n      $('.add-vehicle').hide();\n      $('.add-vehicle-show').fadeIn(333);\n    });\n  },\n\n  onVehicleAddingFailed: function (err) {\n    $('#add-vehicle-failed').text(JSON.stringify(err));\n  },\n\n  onVehicleAdded: function () {\n    $('.add-vehicle').hide();\n    $('.add-vehicle-show').fadeIn(333);\n  }\n}\n\nmodule.exports = vehicleListView;\n\n\n/***/ }),\n\n/***/ 131:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"index.html\";\n\n/***/ }),\n\n/***/ 132:\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ 133:\n/***/ (function(module, exports) {\n\nmodule.exports = undefined;\n\n/***/ }),\n\n/***/ 134:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar angular = __webpack_require__(132);\n__webpack_require__(133);\n\n// style sheets\n__webpack_require__(3);\n__webpack_require__(4);\n\n// index.html\n__webpack_require__(131);\n\nvar loginView = __webpack_require__(128);\nvar dashboardView = __webpack_require__(127);\nvar vehicleView = __webpack_require__(6);\nvar vehicleListView = __webpack_require__(129);\nvar currentView;\nvar $currentViewScope;\n\nvar auth = {};\nvar n_data_map = {};\nvar total_speed_map = {};\nvar total_driver_scores_map = {};\nvar current_infowindow = null;\nvar latestStats = {};\n\nfunction initVehicleStats(vehicle) {\n  if (!(vehicle.info.id in n_data_map)) {\n    n_data_map[vehicle.info.id] = 0;\n    total_speed_map[vehicle.info.id] = 0;\n    total_driver_scores_map[vehicle.info.id] = 0;\n  }\n}\n\nfunction updateVehicleStats(vehicle, data) {\n  initVehicleStats(vehicle);\n\n  var n_data = ++n_data_map[vehicle.info.id];\n  var total_speed = total_speed_map[vehicle.info.id];\n  var total_driver_scores = total_driver_scores_map[vehicle.info.id];\n\n  var stats = {\n    miles : (data.miles).toFixed(0),\n    avg_speed : (total_speed/n_data).toFixed(0),\n    driver_score : (total_driver_scores/n_data).toFixed(0),\n    fuel : (data.fuel).toFixed(0),\n    brake : (data.brake).toFixed(0),\n    runtime : data.runtime\n  };\n\n  total_speed_map[vehicle.info.id] =  total_speed_map[vehicle.info.id] + data.speed;\n  total_driver_scores_map[vehicle.info.id] = total_driver_scores_map[vehicle.info.id] + data.avgT;\n\n  latestStats[vehicle.info.id] = stats;\n}\n\nvar App = __webpack_require__(126);\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  },\n\n  onVehicleData: function (vehicle, data) {\n    updateVehicleStats(vehicle, data);\n    if (currentView.onVehicleData) currentView.onVehicleData(vehicle, data);\n    if (currentView.onVehicleStats) currentView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n  },\n\n  onAuthenticated: function () {\n    window.location.href = '/#!/dashboard';\n    $currentViewScope.$apply();\n  },\n\n  authFailed: function (reason) {\n    auth.reason = reason;\n    window.location.href = '/#!/login';\n    $currentViewScope.$apply();\n  },\n\n  authRequired: function () {\n    auth.reason = \"\";\n    window.location.href = '/#!/login';\n  },\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('LoginViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.auth = auth;\n    currentView = loginView;\n    $timeout(function () {\n      loginView.init(app, $scope.auth);\n    });\n  }])\n  .controller('DashboardViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    currentView = dashboardView;\n    // use timeout service to wait until view is loaded\n    $timeout(function () {\n      dashboardView.init($scope, latestStats);\n    }, 0);\n  }])\n  .controller('VehicleViewCtrl', ['$routeParams', '$scope', '$timeout', function ($routeParams, $scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    $scope.id = $routeParams.id;\n    $scope.vehicle = app.vehicles[$routeParams.id];\n    currentView = vehicleView;\n    if ($scope.vehicle) {\n      $timeout(function () {\n        vehicleView.init($scope);\n        vehicleView.onVehicleStats($scope.vehicle, latestStats[$scope.vehicle.info.id]);\n      }, 0);\n    }\n  }])\n  .controller('VehicleListViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.newVehicle = {};\n    $scope.addVehicle = function () {\n      var err = app.addVehicle(angular.copy($scope.newVehicle), function (err, vehicleAdded) {\n        if (err) {\n          vehicleListView.onVehicleAddingFailed(err);\n        } else {\n          $scope.vehicleAdded = vehicleAdded;\n          vehicleListView.onVehicleAdded();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteVehicle = function (vehicleId) {\n      app.deleteVehicle(vehicleId);\n    };\n    $scope.generateVehicleKey = function (vehicleId) {\n      app.generateKey(vehicleId);\n    };\n    currentView = vehicleListView;\n    vehicleListView.init();\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: \"views/dashboard.html\" } )\n      .when('/vehicles/:id', { controller: 'VehicleViewCtrl', templateUrl: \"views/vehicle.html\" } )\n      .when('/vehicles', { controller: 'VehicleListViewCtrl', templateUrl: \"views/vehicle_list.html\" } )\n      .when('/login', { controller: 'LoginViewCtrl', templateUrl: 'views/login.html' })\n      .otherwise({ redirectTo: '/dashboard' }); \n  }]);\n\n\n/***/ }),\n\n/***/ 163:\n/***/ (function(module, exports) {\n\nvar path = 'views/dashboard.html';\nvar html = \"<h1>Active Vehicles</h1>\\n\\n<h3 ng-hide=\\\"vehicles.length\\\" class=\\\"ng-hide\\\">There are currently no vehicles on the road.</h3>\\n\\n<div ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.id }} | {{vehicle.info.name}} <a href=\\\"#!/vehicles/{{vehicle.info.id}}\\\">(view past drives)</a></h3>\\n  <h4>Current trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map-{{vehicle.info.id}}\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 164:\n/***/ (function(module, exports) {\n\nvar path = 'views/login.html';\nvar html = \"<div class=\\\"login-form container\\\">\\n    <p id=\\\"login-reason\\\" class=\\\"text-warning\\\">{{ auth.reason }}</p>\\n    <label><b>Username</b></label>\\n    <input type=\\\"text\\\" id=\\\"input-form-username\\\" placeholder=\\\"Enter Username\\\" ng-model=\\\"auth.username\\\">\\n\\n    <label><b>Password</b></label>\\n    <input type=\\\"password\\\" id=\\\"input-form-password\\\" placeholder=\\\"Enter Password\\\" ng-model=\\\"auth.password\\\">\\n\\n    <button id=\\\"input-form-submit\\\" type=\\\"submit\\\">Login</button>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 165:\n/***/ (function(module, exports) {\n\nvar path = 'views/vehicle.html';\nvar html = \"<div class=\\\"jumbotron vehicle \\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.name }}</h3>\\n  <h4>Total trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 166:\n/***/ (function(module, exports) {\n\nvar path = 'views/vehicle_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Vehicles</h1>\\n    </div>\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Mobile</th>\\n<!--\\n            <th>Twilio SIM SID</th>\\n-->\\n            <th>Key</th>\\n            <th>Created</th>\\n            <th>Operations</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\" ng-class=\\\"{'text-success': vehicleAdded.info.id === vehicle.info.id}\\\">\\n            <td>{{ vehicle.info.id }}</td>\\n            <td>{{ vehicle.info.name }}</td>\\n            <td>{{ vehicle.info.mobile }}</td>\\n<!--\\n            <td>{{ vehicle.info.sim_sid }}</td>\\n            <td>{{ vehicle.info.key }} <small ng-if=\\\"vehicle.info.secret\\\" class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></td>\\n-->\\n            <td>\\n              <div ng-if=\\\"vehicle.info.key\\\">{{ vehicle.info.key }} <small class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></div>\\n              <div ng-if=\\\"!vehicle.info.key\\\" class=\\\"text-danger\\\">Hidden</div>\\n            </td>\\n            <td>{{ vehicle.info.created_at }}</td>\\n<!--\\n            <td><a href=\\\"#!/vehicles/{{ vehicle.info.id }}/edit\\\" class=\\\"btn btn-xs btn-success\\\">Edit</a></td>\\n-->\\n            <td>\\n              <button ng-click=\\\"generateVehicleKey(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Generate New Key</button>\\n              <button ng-click=\\\"deleteVehicle(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-vehicle-show\\\">Add New Vehicle</a>\\n\\n<div class=\\\"row add-vehicle\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addVehicle()\\\">\\n      <fieldset>\\n        <legend>New Vehicle</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"type\\\" class=\\\"col-lg-2 control-label\\\">Type</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <select type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.type\\\" ng-init=\\\"newVehicle.type='BIKE'\\\" id=\\\"type\\\" autocomplete=\\\"off\\\">\\n                <option value=\\\"CAR\\\">Car</option>\\n                <option value=\\\"BIKE\\\">Bicycle</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.id\\\" id=\\\"id\\\" placeholder=\\\"Id\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobile\\\" class=\\\"col-lg-2 control-label\\\">Mobile</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile Number\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n<!--\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.sim_sid\\\" id=\\\"sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n-->\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-vehicle-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-vehicle-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ 171:\n/***/ (function(module, exports) {\n\nmodule.exports = Twilio.Sync;\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(165);\n\nvar $ = __webpack_require__(1);\n\nvar map;\nvar infowindows = {};\n\nvar vehicleView = {\n  init: function ($scope) {\n    map = vehicleView.initMapElement('map');\n    $scope.vehicle.driving_data.forEach(function (data) {\n      vehicleView.onVehicleData($scope.vehicle.info.id, data);\n    });\n  },\n\n  initMapElement: function (mapElementName) {\n    var map = new google.maps.Map(document.getElementById(mapElementName), {\n      zoom: 14\n    });\n    return map;\n  },\n\n  addDataToMap: function (map, infowindows, data) {\n    var latLon = { lat: data.lat, lng: data.lon}\n    var marker = new google.maps.Marker({\n      position: latLon,\n      map: map,\n      title: String(data.id)\n    });\n\n    var content_string = '<div class=\"infowindow-label\"> \\\n                            <h1>Point data</h1> \\\n                            <p><span class=\"label label-default\">Distance:</span> <span class=\"value\">'+(data.miles).toFixed(0)+' Miles</span></p> \\\n                            <p><span class=\"label label-default\">Speed:</span> <span class=\"value\">'+(data.speed).toFixed(0)+' mph</span></p> \\\n                            <p><span class=\"label label-default\">Fuel:</span> <span class=\"value\">'+(data.fuel).toFixed(0)+'%</span></p> \\\n                          </div>';\n\n    var infowindow = new google.maps.InfoWindow({\n      content: content_string,\n    });\n    infowindows[data.id] = infowindow;\n    map.panTo(marker.getPosition());\n\n    google.maps.event.addListener(marker, 'click', function(e) {\n      if(current_infowindow) {\n        current_infowindow.close();\n      }\n      infowindows[this.getTitle()].open(map, this);\n      current_infowindow = infowindows[this.getTitle()];\n    });\n  },\n\n  updateStats: function (vehicleElemementName, stats) {\n    if (!stats) return;\n\n    $('.' + vehicleElemementName + ' .miles span').text(stats.miles);\n    $('.' + vehicleElemementName + ' .speed span').text(stats.avg_speed);\n    $('.' + vehicleElemementName + ' .fuel span').text(stats.fuel);\n    $('.' + vehicleElemementName + ' .brake span').text(stats.brake);\n\n    var runtime_string;\n    if(stats.runtime < 60) {\n      runtime_string = stats.runtime+' seconds';\n    } else if(stats.runtime < 3600) {\n      runtime_string = (stats.runtime/60).toFixed(0)+\" minutes\";\n    } else {\n      var hours = Math.floor(runtime/3600);\n      var minutes = ((runtime - (hours*3600))/60).toFixed(0);\n      runtime_string = hours+\" hours and \"+minutes+\" minutes\";\n    }\n\n    $('.' + vehicleElemementName + ' .runtime').text(runtime_string);    \n  },\n\n  onVehicleData: function (vehicle, data) {\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    vehicleView.updateStats('vehicle', stats);\n  }  \n};\n\nmodule.exports = vehicleView;\n\n\n/***/ })\n\n},[134]);\n\n\n// WEBPACK FOOTER //\n// index.js","'use strict';\n\nconst MOMENT_FORMAT = \"MMM DD YYYY @ hh:mm\";\n\nvar moment = require(\"moment\");\n\nmodule.exports = function(callbacks) {\n  var $ = require(\"jquery\");\n  var SyncClient = require(\"twilio-sync\").Client;\n  var syncClient;\n  var token;\n  var auth;\n\n  var vehicles = {};\n\n\n  function initVehicleExtraInfo(id, extraInfo) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"initVehicleExtraInfo\", id, extraInfo);\n      return document.set(extraInfo);\n    });\n  }\n\n  function fetchVehicleExtraInfo(id) {\n    return syncClient.document(\"vehicle-\" + id + \"-info\").then(function (document) {\n      console.log(\"fetchVehicleExtraInfo\", id, document.value);\n      return document.value;\n    });\n  };\n\n  function subscribeToVehicleData(id) {\n    syncClient.list(\"vehicle-\" + id + \"-data\").then(function (list) {\n      list.getItems({ limit: 100 }).then(function (page) {\n        console.info(\"items arrived\", id, page.items.length);\n        vehicles[id].driving_data = page.items.map(function (item) {\n          item.data.value.id = item.index;\n          callbacks.onVehicleData(vehicles[id], item.data.value);\n          return item.data.value;\n        });\n      });\n      list.on(\"itemAdded\", function (item) {\n        console.info(\"itemAdded\", id, item);\n        item.data.value.id = item.index;\n        vehicles[id].driving_data.push(item.data.value);\n        callbacks.onVehicleData(vehicles[id], item.data.value);\n      });\n    });\n  };\n\n\treturn {\n    vehicles: vehicles,\n\n    updateToken: function (cb) {\n      var that = this;\n      return $.get(\"/authenticate?\" + auth, function (result) {\n        if (result.success) {\n          console.log(\"token updated:\", result);\n          if (cb) {\n            cb(result.sync_token, result.twiml_app_token);\n          } else {\n            syncClient.updateToken(result.sync_token);\n            Twilio.Device.setup(result.twiml_app_token);\n          }\n          setTimeout(that.updateToken.bind(that), result.ttl*1000 * 0.96); // update token slightly in adance of ttl\n        } else {\n          console.error(\"failed to authenticate the user: \", result.error);\n          auth=\"\";\n          callbacks.authFailed(result.error);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send authentication request:\", textStatus, error);\n        auth=\"\";\n        callbacks.authFailed(error);\n      });\n    },\n\n    refreshVehicleList: function () {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=list\", function (result) {\n        if (result.success) {\n          $.when.apply($, $.map(result.vehicles, function (vehicle) {\n            var id = vehicle.unique_name;\n            vehicles[id] = {\n              info: {\n                id: id,\n                name: vehicle.friendly_name,\n                created_at: moment(vehicle.date_created).format(MOMENT_FORMAT)\n              },\n              driving_data: []\n            };\n            return fetchVehicleExtraInfo(id).then(function (extraInfo) {\n              vehicles[id].info = $.extend(vehicles[id].info, extraInfo);\n              subscribeToVehicleData(vehicle.unique_name);\n            });\n          })).done(function () {\n            callbacks.refresh();\n          });\n        } else {\n          console.error(\"failed to list vehicles:\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send list vehicles request:\", textStatus, error);\n      });\n    },\n\n    addVehicle: function (newVehicle, callback) {\n      if (!newVehicle.id) {\n        return callback({success: false, error: \"Vehicle id should not be empty\"});\n      }\n      $.get(\"/fleetmanager?\" + auth + \"&op=add&vehicle_id=\"+newVehicle.id.toUpperCase()+\"&vehicle_name=\"+(newVehicle.name||\"\"), function (result) {\n        if (result.success) {\n          var extraInfo = {\n            type: newVehicle.type,\n            mobile: newVehicle.mobile,\n          };\n          var vehicleAdded = {\n            info: $.extend({\n              id: result.vehicle.unique_name,\n              name: result.vehicle.friendly_name,\n              created_at: moment(result.vehicle.date_created).format(MOMENT_FORMAT),\n              key: result.key.sid,\n              secret: result.key.secret\n            }, extraInfo),\n            driving_data: []\n          };\n          vehicles[result.vehicle.unique_name] = vehicleAdded;          \n          initVehicleExtraInfo(result.vehicle.unique_name, extraInfo)\n          .then(function () {\n            subscribeToVehicleData(result.vehicle.unique_name);\n            callback(null, vehicleAdded);\n          });\n        } else {\n          callback(result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        callback({success: false, error: error});\n        console.error(\"failed to send add vehicle request:\", textStatus, error);\n      });\n    },\n\n    deleteVehicle: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=delete&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          delete vehicles[vehicleId];\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to delete vehicle\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send delete vehicle request:\", textStatus, error);\n      });\n    },\n\n    generateKey: function (vehicleId) {\n      $.get(\"/fleetmanager?\"+ auth + \"&op=genkey&vehicle_id=\"+vehicleId, function (result) {\n        if (result.success) {\n          vehicles[vehicleId].info.key = result.key.sid;\n          vehicles[vehicleId].info.secret = result.key.secret;\n          callbacks.refresh();\n        } else {\n          console.error(\"failed to generate key\", result);\n        }\n      }).fail(function (jqXHR, textStatus, error) {\n        console.error(\"failed to send generate key request:\", textStatus, error);\n      });\n    },\n\n    call: function (vehicle, currentTarget) {\n      var activeConnection = Twilio.Device.activeConnection();\n      console.log(\"call\", vehicle);\n      if (!vehicle.voiceConnection) {\n        $(\".btn-call\").prop('disabled', true);\n        $(currentTarget).prop('disabled', false);\n        if (!activeConnection) {\n          console.log(\"call.connect\");\n          $(currentTarget).addClass('btn-danger');\n          $(currentTarget).html(\"End Call\");\n          Twilio.Device.disconnect(function () {\n            console.log(\"call.disconnected\");\n            $(\".btn-call\").prop('disabled', false);\n            $(currentTarget).removeClass('btn-danger');\n            $(currentTarget).html(\"Call\");\n          });\n          vehicle.voiceConnection = Twilio.Device.connect({ number: vehicle.info.mobile });\n        } else {\n          console.log(\"call.incall\");\n        }\n      } else {\n        console.log(\"call.disconnect\");\n        vehicle.voiceConnection.disconnect();\n        vehicle.voiceConnection = null;\n        $(\".btn-call\").prop('disabled', false);\n      }\n    },\n\n    checkLoggedIn: function () {\n      if (!auth) {\n        callbacks.authRequired();\n      }\n    },\n\n    login: function (username, password) {\n      var that = this;\n      auth = \"username=\" + username + \"&pincode=\" + password;\n      this.updateToken(function (syncToken, twimlAppToken) {\n        syncClient = new SyncClient(syncToken);\n        Twilio.Device.setup(twimlAppToken);\n        that.refreshVehicleList();\n        callbacks.onAuthenticated();\n      });\n    },\n\n    init: function () {\n      this.checkLoggedIn();\n      this.login(\"trump\", \"2016\");\n    }\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/app.js\n// module id = 126\n// module chunks = 0","require(\"../views/dashboard.html\");\n\nvar vehicleView = require(\"./vehicleView\");\n\nvar all_maps;\nvar infowindows_map;\n\nvar dashboardView = {\n  init: function ($scope, latestStats) {\n    all_maps = {};\n    infowindows_map = {};\n\n    for (var id in $scope.vehicles) {\n      var vehicle = $scope.vehicles[id];\n      vehicle.driving_data.forEach(function (data) {\n        dashboardView.onVehicleData(vehicle, data);\n        dashboardView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n      });\n    }\n  },\n\n  onVehicleData: function (vehicle, data) {\n    if (!infowindows_map[vehicle.info.id]) {\n      var mapElementName = 'map-'+vehicle.info.id;\n      var newMap = vehicleView.initMapElement(mapElementName);\n      all_maps[vehicle.info.id] = newMap;  \n      infowindows_map[vehicle.info.id] = {};\n    }\n    var map = all_maps[vehicle.info.id];\n    var infowindows = infowindows_map[vehicle.info.id];\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    if (!stats) return;\n\n    var vehicleElemementName = 'vehicle'+vehicle.info.id;\n\n    vehicleView.updateStats(vehicleElemementName, stats);\n  }\n};\n\nmodule.exports = dashboardView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/dashboardView.js\n// module id = 127\n// module chunks = 0","require(\"../views/login.html\");\n\nvar loginView = {\n    init: function (app, auth) {\n        $('#input-form-submit').click(function () {\n            app.login(auth.username, auth.password);\n        });\n    }\n};\n\nmodule.exports = loginView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/loginView.js\n// module id = 128\n// module chunks = 0","require(\"../views/vehicle_list.html\");\n\nvar $ = require(\"jquery\");\n\nvar vehicleListView = {\n  init: function () {\n    $('.add-vehicle-show').click(function() {\n      $(this).hide();\n      $('.add-vehicle').fadeIn(333);\n      $('#id').val('');\n      $('#name').val('');\n      $('#sim_sid').val('');\n    });\n    $('.add-vehicle-cancel').click(function() {\n      $('.add-vehicle').hide();\n      $('.add-vehicle-show').fadeIn(333);\n    });\n  },\n\n  onVehicleAddingFailed: function (err) {\n    $('#add-vehicle-failed').text(JSON.stringify(err));\n  },\n\n  onVehicleAdded: function () {\n    $('.add-vehicle').hide();\n    $('.add-vehicle-show').fadeIn(333);\n  }\n}\n\nmodule.exports = vehicleListView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/vehicleListView.js\n// module id = 129\n// module chunks = 0","module.exports = __webpack_public_path__ + \"index.html\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.html\n// module id = 131\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 132\n// module chunks = 0","module.exports = undefined;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"angular-route\"}\n// module id = 133\n// module chunks = 0","'use strict';\n\nvar angular = require(\"angular\");\nrequire(\"angular-route\");\n\n// style sheets\nrequire(\"bootstrap-webpack\");\nrequire(\"../scss/main.scss\");\n\n// index.html\nrequire(\"../index.html\");\n\nvar loginView = require(\"./loginView.js\");\nvar dashboardView = require(\"./dashboardView\");\nvar vehicleView = require(\"./vehicleView\");\nvar vehicleListView = require(\"./vehicleListView\");\nvar currentView;\nvar $currentViewScope;\n\nvar auth = {};\nvar n_data_map = {};\nvar total_speed_map = {};\nvar total_driver_scores_map = {};\nvar current_infowindow = null;\nvar latestStats = {};\n\nfunction initVehicleStats(vehicle) {\n  if (!(vehicle.info.id in n_data_map)) {\n    n_data_map[vehicle.info.id] = 0;\n    total_speed_map[vehicle.info.id] = 0;\n    total_driver_scores_map[vehicle.info.id] = 0;\n  }\n}\n\nfunction updateVehicleStats(vehicle, data) {\n  initVehicleStats(vehicle);\n\n  var n_data = ++n_data_map[vehicle.info.id];\n  var total_speed = total_speed_map[vehicle.info.id];\n  var total_driver_scores = total_driver_scores_map[vehicle.info.id];\n\n  var stats = {\n    miles : (data.miles).toFixed(0),\n    avg_speed : (total_speed/n_data).toFixed(0),\n    driver_score : (total_driver_scores/n_data).toFixed(0),\n    fuel : (data.fuel).toFixed(0),\n    brake : (data.brake).toFixed(0),\n    runtime : data.runtime\n  };\n\n  total_speed_map[vehicle.info.id] =  total_speed_map[vehicle.info.id] + data.speed;\n  total_driver_scores_map[vehicle.info.id] = total_driver_scores_map[vehicle.info.id] + data.avgT;\n\n  latestStats[vehicle.info.id] = stats;\n}\n\nvar App = require(\"./app\");\nwindow.app = new App({\n  refresh: function () {\n    $currentViewScope.$apply();\n  },\n\n  onVehicleData: function (vehicle, data) {\n    updateVehicleStats(vehicle, data);\n    if (currentView.onVehicleData) currentView.onVehicleData(vehicle, data);\n    if (currentView.onVehicleStats) currentView.onVehicleStats(vehicle, latestStats[vehicle.info.id]);\n  },\n\n  onAuthenticated: function () {\n    window.location.href = '/#!/dashboard';\n    $currentViewScope.$apply();\n  },\n\n  authFailed: function (reason) {\n    auth.reason = reason;\n    window.location.href = '/#!/login';\n    $currentViewScope.$apply();\n  },\n\n  authRequired: function () {\n    auth.reason = \"\";\n    window.location.href = '/#!/login';\n  },\n});\n\nangular\n  .module(\"app\", [\n    'ngRoute'\n  ])\n  .controller('LoginViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    $currentViewScope = $scope;\n    $scope.auth = auth;\n    currentView = loginView;\n    $timeout(function () {\n      loginView.init(app, $scope.auth);\n    });\n  }])\n  .controller('DashboardViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    currentView = dashboardView;\n    // use timeout service to wait until view is loaded\n    $timeout(function () {\n      dashboardView.init($scope, latestStats);\n    }, 0);\n  }])\n  .controller('VehicleViewCtrl', ['$routeParams', '$scope', '$timeout', function ($routeParams, $scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.app = app;\n    $scope.vehicles = app.vehicles;\n    $scope.id = $routeParams.id;\n    $scope.vehicle = app.vehicles[$routeParams.id];\n    currentView = vehicleView;\n    if ($scope.vehicle) {\n      $timeout(function () {\n        vehicleView.init($scope);\n        vehicleView.onVehicleStats($scope.vehicle, latestStats[$scope.vehicle.info.id]);\n      }, 0);\n    }\n  }])\n  .controller('VehicleListViewCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\n    app.checkLoggedIn();\n    $currentViewScope = $scope;\n    $scope.vehicles = app.vehicles;\n    $scope.newVehicle = {};\n    $scope.addVehicle = function () {\n      var err = app.addVehicle(angular.copy($scope.newVehicle), function (err, vehicleAdded) {\n        if (err) {\n          vehicleListView.onVehicleAddingFailed(err);\n        } else {\n          $scope.vehicleAdded = vehicleAdded;\n          vehicleListView.onVehicleAdded();\n          $scope.$apply();\n        }\n      });\n    };\n    $scope.deleteVehicle = function (vehicleId) {\n      app.deleteVehicle(vehicleId);\n    };\n    $scope.generateVehicleKey = function (vehicleId) {\n      app.generateKey(vehicleId);\n    };\n    currentView = vehicleListView;\n    vehicleListView.init();\n  }])\n  .config(['$routeProvider', function ($routeProvider) {\n    $routeProvider\n      .when('/dashboard', { controller: 'DashboardViewCtrl', templateUrl: \"views/dashboard.html\" } )\n      .when('/vehicles/:id', { controller: 'VehicleViewCtrl', templateUrl: \"views/vehicle.html\" } )\n      .when('/vehicles', { controller: 'VehicleListViewCtrl', templateUrl: \"views/vehicle_list.html\" } )\n      .when('/login', { controller: 'LoginViewCtrl', templateUrl: 'views/login.html' })\n      .otherwise({ redirectTo: '/dashboard' }); \n  }]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 134\n// module chunks = 0","var path = 'views/dashboard.html';\nvar html = \"<h1>Active Vehicles</h1>\\n\\n<h3 ng-hide=\\\"vehicles.length\\\" class=\\\"ng-hide\\\">There are currently no vehicles on the road.</h3>\\n\\n<div ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.id }} | {{vehicle.info.name}} <a href=\\\"#!/vehicles/{{vehicle.info.id}}\\\">(view past drives)</a></h3>\\n  <h4>Current trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map-{{vehicle.info.id}}\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/dashboard.html\n// module id = 163\n// module chunks = 0","var path = 'views/login.html';\nvar html = \"<div class=\\\"login-form container\\\">\\n    <p id=\\\"login-reason\\\" class=\\\"text-warning\\\">{{ auth.reason }}</p>\\n    <label><b>Username</b></label>\\n    <input type=\\\"text\\\" id=\\\"input-form-username\\\" placeholder=\\\"Enter Username\\\" ng-model=\\\"auth.username\\\">\\n\\n    <label><b>Password</b></label>\\n    <input type=\\\"password\\\" id=\\\"input-form-password\\\" placeholder=\\\"Enter Password\\\" ng-model=\\\"auth.password\\\">\\n\\n    <button id=\\\"input-form-submit\\\" type=\\\"submit\\\">Login</button>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/login.html\n// module id = 164\n// module chunks = 0","var path = 'views/vehicle.html';\nvar html = \"<div class=\\\"jumbotron vehicle \\\">\\n  <h3>({{ vehicle.info.type }}) {{ vehicle.info.name }}</h3>\\n  <h4>Total trip time: <span class=\\\"runtime\\\">0</span></h4>\\n  <div class=\\\"row map-cont\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"map\\\" id=\\\"map\\\"></div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4 col-lg-offset-4\\\">\\n      <button class=\\\"btn btn-primary btn-call\\\" ng-click=\\\"app.call(vehicle, $event.currentTarget)\\\">Call</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" ng-if=\\\"vehicle.info.type == 'CAR'\\\">\\n    <div class=\\\"col-lg-2 col-lg-offset-1\\\">\\n      <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Trip Distance</h3>\\n        </div>\\n        <div class=\\\"panel-body miles\\\">\\n          <span>00</span> miles\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Average Speed</h3>\\n        </div>\\n        <div class=\\\"panel-body speed\\\">\\n          <span>00</span> mph\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Hard Brakes</h3>\\n        </div>\\n        <div class=\\\"panel-body brake\\\">\\n          <span>00</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-2\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Fuel Guage</h3>\\n        </div>\\n        <div class=\\\"panel-body fuel\\\">\\n          <span>00</span>%\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/vehicle.html\n// module id = 165\n// module chunks = 0","var path = 'views/vehicle_list.html';\nvar html = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"page-header\\\">\\n      <h1 id=\\\"tables\\\">Vehicles</h1>\\n    </div>\\n    <div class=\\\"bs-component\\\">\\n      <table class=\\\"table table-striped table-hover \\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Mobile</th>\\n<!--\\n            <th>Twilio SIM SID</th>\\n-->\\n            <th>Key</th>\\n            <th>Created</th>\\n            <th>Operations</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr ng-repeat=\\\"vehicle in vehicles\\\" class=\\\"jumbotron vehicle vehicle{{vehicle.info.id}}\\\" ng-class=\\\"{'text-success': vehicleAdded.info.id === vehicle.info.id}\\\">\\n            <td>{{ vehicle.info.id }}</td>\\n            <td>{{ vehicle.info.name }}</td>\\n            <td>{{ vehicle.info.mobile }}</td>\\n<!--\\n            <td>{{ vehicle.info.sim_sid }}</td>\\n            <td>{{ vehicle.info.key }} <small ng-if=\\\"vehicle.info.secret\\\" class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></td>\\n-->\\n            <td>\\n              <div ng-if=\\\"vehicle.info.key\\\">{{ vehicle.info.key }} <small class=\\\"text-warning\\\"><br/>Secret: {{ vehicle.info.secret }}</small></div>\\n              <div ng-if=\\\"!vehicle.info.key\\\" class=\\\"text-danger\\\">Hidden</div>\\n            </td>\\n            <td>{{ vehicle.info.created_at }}</td>\\n<!--\\n            <td><a href=\\\"#!/vehicles/{{ vehicle.info.id }}/edit\\\" class=\\\"btn btn-xs btn-success\\\">Edit</a></td>\\n-->\\n            <td>\\n              <button ng-click=\\\"generateVehicleKey(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Generate New Key</button>\\n              <button ng-click=\\\"deleteVehicle(vehicle.info.id)\\\" class=\\\"btn btn-xs btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    <div id=\\\"source-button\\\" class=\\\"btn btn-primary btn-xs\\\" style=\\\"display: none;\\\">&lt; &gt;</div></div>\\n  </div>\\n  <div class=\\\"divider col-lg-10 bg-primary\\\"></div>\\n</div>\\n\\n<a class=\\\"btn btn-primary add-vehicle-show\\\">Add New Vehicle</a>\\n\\n<div class=\\\"row add-vehicle\\\">\\n  <div class=\\\"col-lg-6\\\">\\n    <form class=\\\"form-horizontal\\\" ng-submit=\\\"addVehicle()\\\">\\n      <fieldset>\\n        <legend>New Vehicle</legend>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"type\\\" class=\\\"col-lg-2 control-label\\\">Type</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <select type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.type\\\" ng-init=\\\"newVehicle.type='BIKE'\\\" id=\\\"type\\\" autocomplete=\\\"off\\\">\\n                <option value=\\\"CAR\\\">Car</option>\\n                <option value=\\\"BIKE\\\">Bicycle</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"id\\\" class=\\\"col-lg-2 control-label\\\">Id</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.id\\\" id=\\\"id\\\" placeholder=\\\"Id\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\" class=\\\"col-lg-2 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"mobile\\\" class=\\\"col-lg-2 control-label\\\">Mobile</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile Number\\\" autocomplete=\\\"off\\\">\\n          </div>\\n        </div>\\n\\n<!--\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"sim_sid\\\" class=\\\"col-lg-2 control-label\\\">Twilio SIM SID</label>\\n          <div class=\\\"col-lg-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"newVehicle.sim_sid\\\" id=\\\"sim_sid\\\" placeholder=\\\"Twilio SIM SID\\\">\\n          </div>\\n        </div>\\n-->\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default add-vehicle-cancel\\\">Cancel</button>\\n          </div>\\n        </div>\\n\\n        <p class=\\\"text-warning\\\" id=\\\"add-vehicle-failed\\\"></p>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./views/vehicle_list.html\n// module id = 166\n// module chunks = 0","module.exports = Twilio.Sync;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Twilio.Sync\"\n// module id = 171\n// module chunks = 0","require(\"../views/vehicle.html\");\n\nvar $ = require(\"jquery\");\n\nvar map;\nvar infowindows = {};\n\nvar vehicleView = {\n  init: function ($scope) {\n    map = vehicleView.initMapElement('map');\n    $scope.vehicle.driving_data.forEach(function (data) {\n      vehicleView.onVehicleData($scope.vehicle.info.id, data);\n    });\n  },\n\n  initMapElement: function (mapElementName) {\n    var map = new google.maps.Map(document.getElementById(mapElementName), {\n      zoom: 14\n    });\n    return map;\n  },\n\n  addDataToMap: function (map, infowindows, data) {\n    var latLon = { lat: data.lat, lng: data.lon}\n    var marker = new google.maps.Marker({\n      position: latLon,\n      map: map,\n      title: String(data.id)\n    });\n\n    var content_string = '<div class=\"infowindow-label\"> \\\n                            <h1>Point data</h1> \\\n                            <p><span class=\"label label-default\">Distance:</span> <span class=\"value\">'+(data.miles).toFixed(0)+' Miles</span></p> \\\n                            <p><span class=\"label label-default\">Speed:</span> <span class=\"value\">'+(data.speed).toFixed(0)+' mph</span></p> \\\n                            <p><span class=\"label label-default\">Fuel:</span> <span class=\"value\">'+(data.fuel).toFixed(0)+'%</span></p> \\\n                          </div>';\n\n    var infowindow = new google.maps.InfoWindow({\n      content: content_string,\n    });\n    infowindows[data.id] = infowindow;\n    map.panTo(marker.getPosition());\n\n    google.maps.event.addListener(marker, 'click', function(e) {\n      if(current_infowindow) {\n        current_infowindow.close();\n      }\n      infowindows[this.getTitle()].open(map, this);\n      current_infowindow = infowindows[this.getTitle()];\n    });\n  },\n\n  updateStats: function (vehicleElemementName, stats) {\n    if (!stats) return;\n\n    $('.' + vehicleElemementName + ' .miles span').text(stats.miles);\n    $('.' + vehicleElemementName + ' .speed span').text(stats.avg_speed);\n    $('.' + vehicleElemementName + ' .fuel span').text(stats.fuel);\n    $('.' + vehicleElemementName + ' .brake span').text(stats.brake);\n\n    var runtime_string;\n    if(stats.runtime < 60) {\n      runtime_string = stats.runtime+' seconds';\n    } else if(stats.runtime < 3600) {\n      runtime_string = (stats.runtime/60).toFixed(0)+\" minutes\";\n    } else {\n      var hours = Math.floor(runtime/3600);\n      var minutes = ((runtime - (hours*3600))/60).toFixed(0);\n      runtime_string = hours+\" hours and \"+minutes+\" minutes\";\n    }\n\n    $('.' + vehicleElemementName + ' .runtime').text(runtime_string);    \n  },\n\n  onVehicleData: function (vehicle, data) {\n    vehicleView.addDataToMap(map, infowindows, data);\n  },\n\n  onVehicleStats: function (vehicle, stats) {\n    vehicleView.updateStats('vehicle', stats);\n  }  \n};\n\nmodule.exports = vehicleView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/vehicleView.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}